; ModuleID = "PsyNeuLinkModule-40"
target triple = "unknown-unknown-unknown"
target datalayout = ""

define void @"WORKING_MEMORY__fnn__SGD_STEP_42"({{[25 x [32 x double]], [8 x [32 x double]], [2 x [32 x double]], [8 x [32 x double]], [25 x [32 x double]], [32 x [2 x double]]}}* nonnull %".1", {{{{{{double, double}}, {{double, double}}, {{double, double}}, {{double, double}}, {{double, double}}, {{double, double}}}, {[1 x double], [1 x double], [1 x double], [1 x [25 x double]]}, {}, double, double, double, {{{double, double}}}, {double}, {{{double, {}, double, {}}, {}, {}}}, double, {[1 x double], [1 x double], [1 x double]}, {}}, {{{{double, double}}, {{double, double}}, {{double, double}}, {{double, double}}, {{double, double}}, {{double, double}}}, {[1 x double], [1 x double], [1 x double], [1 x [8 x double]]}, {}, double, double, double, {{{double, double}}}, {double}, {{{double, {}, double, {}}, {}, {}}}, double, {[1 x double], [1 x double], [1 x double]}, {}}, {{{{double, double}}, {{double, double}}, {{double, double}}, {{double, double}}, {{double, double}}, {{double, double}}}, {[1 x double], [1 x double], [1 x double], [1 x [2 x double]]}, {}, double, double, double, {{{double, double}}}, {double}, {{{double, {}, double, {}}, {}, {}}}, double, {[1 x double], [1 x double], [1 x double]}, {}}, {{{{double, double}}, {{double, double}}, {{double, double}}, {{double, double}}, {{double, double}}, {{double, double}}}, {[1 x double], [1 x double], [1 x double], [1 x [8 x double]]}, {}, double, double, double, {{{double, double}}}, {double}, {{{double, {}, double, {}}, {}, {}}}, double, {[1 x double], [1 x double], [1 x double]}, {}}, {{{{double, double}}, {{double, double}}, {{double, double}}, {{double, double}}, {{double, double}}, {{double, double}}}, {[1 x double], [1 x double], [1 x double], [1 x [25 x double]]}, {}, double, double, double, {{{double, double}}}, {double}, {{{double, {}, double, {}}, {}, {}}}, double, {[1 x double], [1 x double], [1 x double]}, {}}, {{{{double, double}}, {{double, double}}, {{double, double}}, {{double, double}}, {{double, double}}, {{double, double}}}, {[1 x double], [1 x double], [1 x double], [1 x [32 x double]]}, {}, double, double, double, {{{double, double}}}, {double}, {{{double, {}, double, {}}, {}, {}}}, double, {[1 x double], [1 x double], [1 x double]}, {}}, {{{{double, double}}, {{double, double}}}, {{{double, {}, double, {}}, {}, {}}}, double, {double, {double}, [1 x double]}, double, double, {{{double, double}}}}, {{{{double, double}}, {{double, double}}}, {{{double, {}, double, {}}, {}, {}}}, double, {[1 x double], [1 x double]}, double, double, {{{double, double}}}}, {{{{double, double}}, {{double, double}}}, {{{double, {}, double, {}}, double, {}}, {{double, {}, double, {}}, {}, {}}}, {}, double, {[1 x double], [2 x [1 x double]], [1 x double], {}}, double, {}, double, {{{double, double}}, {{}}}}, {{{{double, double}}}, {{{double, double}, {}}}, [32 x [2 x double]], {}, double, [2 x double], double, {{{double, double}}, {{double, double}, {}}}, {{{double, {}, double, {}}, {}, {}}, {{double, {}, double, {}}, {}, {}}, {{double, {}, double, {}}, {}, {}}}, {[2 x double], [2 x [2 x double]], [2 x double], [1 x double], [32 x double]}, double}, {{{{double, double}}}, {{{double, double}, {}}}, [25 x [32 x double]], {}, double, [25 x [32 x double]], double, {{{double, double}}, {{double, double}, {}}}, {{{double, {}, double, {}}, {}, {}}, {{double, {}, double, {}}, {}, {}}, {{double, {}, double, {}}, {}, {}}}, {[32 x double], [32 x [2 x double]], [2 x double], [1 x double], [25 x double], {}}, double}, {{{{double, double}}}, {{{double, double}, {}}}, [8 x [32 x double]], {}, double, [8 x [32 x double]], double, {{{double, double}}, {{double, double}, {}}}, {{{double, {}, double, {}}, {}, {}}, {{double, {}, double, {}}, {}, {}}, {{double, {}, double, {}}, {}, {}}}, {[32 x double], [32 x [2 x double]], [2 x double], [1 x double], [8 x double], {}}, double}, {{{{double, double}}}, {{{double, double}, {}}}, [2 x [32 x double]], {}, double, [2 x [32 x double]], double, {{{double, double}}, {{double, double}, {}}}, {{{double, {}, double, {}}, {}, {}}, {{double, {}, double, {}}, {}, {}}, {{double, {}, double, {}}, {}, {}}}, {[32 x double], [32 x [2 x double]], [2 x double], [1 x double], [2 x double], {}}, double}, {{{{double, double}}}, {{{double, double}, {}}}, [8 x [32 x double]], {}, double, [8 x [32 x double]], double, {{{double, double}}, {{double, double}, {}}}, {{{double, {}, double, {}}, {}, {}}, {{double, {}, double, {}}, {}, {}}, {{double, {}, double, {}}, {}, {}}}, {[32 x double], [32 x [2 x double]], [2 x double], [1 x double], [8 x double], {}}, double}, {{{{double, double}}}, {{{double, double}, {}}}, [25 x [32 x double]], {}, double, [25 x [32 x double]], double, {{{double, double}}, {{double, double}, {}}}, {{{double, {}, double, {}}, {}, {}}, {{double, {}, double, {}}, {}, {}}, {{double, {}, double, {}}, {}, {}}}, {[32 x double], [32 x [2 x double]], [2 x double], [1 x double], [25 x double], {}}, double}, {{}, {{{double, {}, double, {}}, {}, {}}, {{double, {}, double, {}}, {}, {}}, {{double, {}, double, {}}, {}, {}}, {{double, {}, double, {}}, {}, {}}, {{double, {}, double, {}}, {}, {}}, {{double, {}, double, {}}, {}, {}}}, double, {}, double, double, {{{}}, {{}}, {{}}, {{}}, {{}}, {{}}}}, {{}, {{{double, {}, double, {}}, {}, {}}}, double, {}, double, double, {{{}}}}, {{}, {{{double, {}, double, {}}, {}, {}}}, double, {}, double, double, {{{double, double}}}}}, {{{[800 x double]}, {}, {}}, {{[256 x double]}, {}, {}}, {{[64 x double]}, {}, {}}, {{[256 x double]}, {}, {}}, {{[800 x double]}, {}, {}}, {{[64 x double]}, {}, {}}, {{[625 x double]}, {}, {}}, {{[64 x double]}, {}, {}}, {{[4 x double]}, {}, {}}, {{[64 x double]}, {}, {}}, {{[625 x double]}, {}, {}}, {{[4 x double]}, {}, {}}, {{[4 x double]}, {}, {}}, {{[4 x double]}, {}, {}}, {{[4 x double]}, {}, {}}, {{[4 x double]}, {}, {}}, {{[1024 x double]}, {}, {}}, {{double, [2 x [1 x double]], double, {}}, [32 x [2 x double]], {[1 x double], [1 x double]}, {}, {}, {}}, {{[625 x double]}, {}, {}}, {{[1024 x double]}, {}, {}}, {{[4 x double]}, {}, {}}, {{double, [2 x [1 x double]], double, {}}, [25 x [32 x double]], {[1 x double], [1 x double]}, {}, {}, {}}, {{[4 x double]}, {}, {}}, {{[64 x double]}, {}, {}}, {{[1024 x double]}, {}, {}}, {{[4 x double]}, {}, {}}, {{double, [2 x [1 x double]], double, {}}, [8 x [32 x double]], {[1 x double], [1 x double]}, {}, {}, {}}, {{[4 x double]}, {}, {}}, {{[1024 x double]}, {}, {}}, {{[4 x double]}, {}, {}}, {{double, [2 x [1 x double]], double, {}}, [2 x [32 x double]], {[1 x double], [1 x double]}, {}, {}, {}}, {{[64 x double]}, {}, {}}, {{[1024 x double]}, {}, {}}, {{[4 x double]}, {}, {}}, {{double, [2 x [1 x double]], double, {}}, [8 x [32 x double]], {[1 x double], [1 x double]}, {}, {}, {}}, {{[625 x double]}, {}, {}}, {{[1024 x double]}, {}, {}}, {{[4 x double]}, {}, {}}, {{double, [2 x [1 x double]], double, {}}, [25 x [32 x double]], {[1 x double], [1 x double]}, {}, {}, {}}}, {}, {}, double, double, {}, double}* nonnull %".2") argmemonly!dbg !6
{
entry:
  %".4" = getelementptr {{[25 x [32 x double]], [8 x [32 x double]], [2 x [32 x double]], [8 x [32 x double]], [25 x [32 x double]], [32 x [2 x double]]}}, {{[25 x [32 x double]], [8 x [32 x double]], [2 x [32 x double]], [8 x [32 x double]], [25 x [32 x double]], [32 x [2 x double]]}}* %".1", i32 0, i32 0 , !dbg !7
  %".5" = getelementptr {[25 x [32 x double]], [8 x [32 x double]], [2 x [32 x double]], [8 x [32 x double]], [25 x [32 x double]], [32 x [2 x double]]}, {[25 x [32 x double]], [8 x [32 x double]], [2 x [32 x double]], [8 x [32 x double]], [25 x [32 x double]], [32 x [2 x double]]}* %".4", i32 0, i32 0 , !dbg !7
  %".6" = getelementptr {{{{{{double, double}}, {{double, double}}, {{double, double}}, {{double, double}}, {{double, double}}, {{double, double}}}, {[1 x double], [1 x double], [1 x double], [1 x [25 x double]]}, {}, double, double, double, {{{double, double}}}, {double}, {{{double, {}, double, {}}, {}, {}}}, double, {[1 x double], [1 x double], [1 x double]}, {}}, {{{{double, double}}, {{double, double}}, {{double, double}}, {{double, double}}, {{double, double}}, {{double, double}}}, {[1 x double], [1 x double], [1 x double], [1 x [8 x double]]}, {}, double, double, double, {{{double, double}}}, {double}, {{{double, {}, double, {}}, {}, {}}}, double, {[1 x double], [1 x double], [1 x double]}, {}}, {{{{double, double}}, {{double, double}}, {{double, double}}, {{double, double}}, {{double, double}}, {{double, double}}}, {[1 x double], [1 x double], [1 x double], [1 x [2 x double]]}, {}, double, double, double, {{{double, double}}}, {double}, {{{double, {}, double, {}}, {}, {}}}, double, {[1 x double], [1 x double], [1 x double]}, {}}, {{{{double, double}}, {{double, double}}, {{double, double}}, {{double, double}}, {{double, double}}, {{double, double}}}, {[1 x double], [1 x double], [1 x double], [1 x [8 x double]]}, {}, double, double, double, {{{double, double}}}, {double}, {{{double, {}, double, {}}, {}, {}}}, double, {[1 x double], [1 x double], [1 x double]}, {}}, {{{{double, double}}, {{double, double}}, {{double, double}}, {{double, double}}, {{double, double}}, {{double, double}}}, {[1 x double], [1 x double], [1 x double], [1 x [25 x double]]}, {}, double, double, double, {{{double, double}}}, {double}, {{{double, {}, double, {}}, {}, {}}}, double, {[1 x double], [1 x double], [1 x double]}, {}}, {{{{double, double}}, {{double, double}}, {{double, double}}, {{double, double}}, {{double, double}}, {{double, double}}}, {[1 x double], [1 x double], [1 x double], [1 x [32 x double]]}, {}, double, double, double, {{{double, double}}}, {double}, {{{double, {}, double, {}}, {}, {}}}, double, {[1 x double], [1 x double], [1 x double]}, {}}, {{{{double, double}}, {{double, double}}}, {{{double, {}, double, {}}, {}, {}}}, double, {double, {double}, [1 x double]}, double, double, {{{double, double}}}}, {{{{double, double}}, {{double, double}}}, {{{double, {}, double, {}}, {}, {}}}, double, {[1 x double], [1 x double]}, double, double, {{{double, double}}}}, {{{{double, double}}, {{double, double}}}, {{{double, {}, double, {}}, double, {}}, {{double, {}, double, {}}, {}, {}}}, {}, double, {[1 x double], [2 x [1 x double]], [1 x double], {}}, double, {}, double, {{{double, double}}, {{}}}}, {{{{double, double}}}, {{{double, double}, {}}}, [32 x [2 x double]], {}, double, [2 x double], double, {{{double, double}}, {{double, double}, {}}}, {{{double, {}, double, {}}, {}, {}}, {{double, {}, double, {}}, {}, {}}, {{double, {}, double, {}}, {}, {}}}, {[2 x double], [2 x [2 x double]], [2 x double], [1 x double], [32 x double]}, double}, {{{{double, double}}}, {{{double, double}, {}}}, [25 x [32 x double]], {}, double, [25 x [32 x double]], double, {{{double, double}}, {{double, double}, {}}}, {{{double, {}, double, {}}, {}, {}}, {{double, {}, double, {}}, {}, {}}, {{double, {}, double, {}}, {}, {}}}, {[32 x double], [32 x [2 x double]], [2 x double], [1 x double], [25 x double], {}}, double}, {{{{double, double}}}, {{{double, double}, {}}}, [8 x [32 x double]], {}, double, [8 x [32 x double]], double, {{{double, double}}, {{double, double}, {}}}, {{{double, {}, double, {}}, {}, {}}, {{double, {}, double, {}}, {}, {}}, {{double, {}, double, {}}, {}, {}}}, {[32 x double], [32 x [2 x double]], [2 x double], [1 x double], [8 x double], {}}, double}, {{{{double, double}}}, {{{double, double}, {}}}, [2 x [32 x double]], {}, double, [2 x [32 x double]], double, {{{double, double}}, {{double, double}, {}}}, {{{double, {}, double, {}}, {}, {}}, {{double, {}, double, {}}, {}, {}}, {{double, {}, double, {}}, {}, {}}}, {[32 x double], [32 x [2 x double]], [2 x double], [1 x double], [2 x double], {}}, double}, {{{{double, double}}}, {{{double, double}, {}}}, [8 x [32 x double]], {}, double, [8 x [32 x double]], double, {{{double, double}}, {{double, double}, {}}}, {{{double, {}, double, {}}, {}, {}}, {{double, {}, double, {}}, {}, {}}, {{double, {}, double, {}}, {}, {}}}, {[32 x double], [32 x [2 x double]], [2 x double], [1 x double], [8 x double], {}}, double}, {{{{double, double}}}, {{{double, double}, {}}}, [25 x [32 x double]], {}, double, [25 x [32 x double]], double, {{{double, double}}, {{double, double}, {}}}, {{{double, {}, double, {}}, {}, {}}, {{double, {}, double, {}}, {}, {}}, {{double, {}, double, {}}, {}, {}}}, {[32 x double], [32 x [2 x double]], [2 x double], [1 x double], [25 x double], {}}, double}, {{}, {{{double, {}, double, {}}, {}, {}}, {{double, {}, double, {}}, {}, {}}, {{double, {}, double, {}}, {}, {}}, {{double, {}, double, {}}, {}, {}}, {{double, {}, double, {}}, {}, {}}, {{double, {}, double, {}}, {}, {}}}, double, {}, double, double, {{{}}, {{}}, {{}}, {{}}, {{}}, {{}}}}, {{}, {{{double, {}, double, {}}, {}, {}}}, double, {}, double, double, {{{}}}}, {{}, {{{double, {}, double, {}}, {}, {}}}, double, {}, double, double, {{{double, double}}}}}, {{{[800 x double]}, {}, {}}, {{[256 x double]}, {}, {}}, {{[64 x double]}, {}, {}}, {{[256 x double]}, {}, {}}, {{[800 x double]}, {}, {}}, {{[64 x double]}, {}, {}}, {{[625 x double]}, {}, {}}, {{[64 x double]}, {}, {}}, {{[4 x double]}, {}, {}}, {{[64 x double]}, {}, {}}, {{[625 x double]}, {}, {}}, {{[4 x double]}, {}, {}}, {{[4 x double]}, {}, {}}, {{[4 x double]}, {}, {}}, {{[4 x double]}, {}, {}}, {{[4 x double]}, {}, {}}, {{[1024 x double]}, {}, {}}, {{double, [2 x [1 x double]], double, {}}, [32 x [2 x double]], {[1 x double], [1 x double]}, {}, {}, {}}, {{[625 x double]}, {}, {}}, {{[1024 x double]}, {}, {}}, {{[4 x double]}, {}, {}}, {{double, [2 x [1 x double]], double, {}}, [25 x [32 x double]], {[1 x double], [1 x double]}, {}, {}, {}}, {{[4 x double]}, {}, {}}, {{[64 x double]}, {}, {}}, {{[1024 x double]}, {}, {}}, {{[4 x double]}, {}, {}}, {{double, [2 x [1 x double]], double, {}}, [8 x [32 x double]], {[1 x double], [1 x double]}, {}, {}, {}}, {{[4 x double]}, {}, {}}, {{[1024 x double]}, {}, {}}, {{[4 x double]}, {}, {}}, {{double, [2 x [1 x double]], double, {}}, [2 x [32 x double]], {[1 x double], [1 x double]}, {}, {}, {}}, {{[64 x double]}, {}, {}}, {{[1024 x double]}, {}, {}}, {{[4 x double]}, {}, {}}, {{double, [2 x [1 x double]], double, {}}, [8 x [32 x double]], {[1 x double], [1 x double]}, {}, {}, {}}, {{[625 x double]}, {}, {}}, {{[1024 x double]}, {}, {}}, {{[4 x double]}, {}, {}}, {{double, [2 x [1 x double]], double, {}}, [25 x [32 x double]], {[1 x double], [1 x double]}, {}, {}, {}}}, {}, {}, double, double, {}, double}, {{{{{{double, double}}, {{double, double}}, {{double, double}}, {{double, double}}, {{double, double}}, {{double, double}}}, {[1 x double], [1 x double], [1 x double], [1 x [25 x double]]}, {}, double, double, double, {{{double, double}}}, {double}, {{{double, {}, double, {}}, {}, {}}}, double, {[1 x double], [1 x double], [1 x double]}, {}}, {{{{double, double}}, {{double, double}}, {{double, double}}, {{double, double}}, {{double, double}}, {{double, double}}}, {[1 x double], [1 x double], [1 x double], [1 x [8 x double]]}, {}, double, double, double, {{{double, double}}}, {double}, {{{double, {}, double, {}}, {}, {}}}, double, {[1 x double], [1 x double], [1 x double]}, {}}, {{{{double, double}}, {{double, double}}, {{double, double}}, {{double, double}}, {{double, double}}, {{double, double}}}, {[1 x double], [1 x double], [1 x double], [1 x [2 x double]]}, {}, double, double, double, {{{double, double}}}, {double}, {{{double, {}, double, {}}, {}, {}}}, double, {[1 x double], [1 x double], [1 x double]}, {}}, {{{{double, double}}, {{double, double}}, {{double, double}}, {{double, double}}, {{double, double}}, {{double, double}}}, {[1 x double], [1 x double], [1 x double], [1 x [8 x double]]}, {}, double, double, double, {{{double, double}}}, {double}, {{{double, {}, double, {}}, {}, {}}}, double, {[1 x double], [1 x double], [1 x double]}, {}}, {{{{double, double}}, {{double, double}}, {{double, double}}, {{double, double}}, {{double, double}}, {{double, double}}}, {[1 x double], [1 x double], [1 x double], [1 x [25 x double]]}, {}, double, double, double, {{{double, double}}}, {double}, {{{double, {}, double, {}}, {}, {}}}, double, {[1 x double], [1 x double], [1 x double]}, {}}, {{{{double, double}}, {{double, double}}, {{double, double}}, {{double, double}}, {{double, double}}, {{double, double}}}, {[1 x double], [1 x double], [1 x double], [1 x [32 x double]]}, {}, double, double, double, {{{double, double}}}, {double}, {{{double, {}, double, {}}, {}, {}}}, double, {[1 x double], [1 x double], [1 x double]}, {}}, {{{{double, double}}, {{double, double}}}, {{{double, {}, double, {}}, {}, {}}}, double, {double, {double}, [1 x double]}, double, double, {{{double, double}}}}, {{{{double, double}}, {{double, double}}}, {{{double, {}, double, {}}, {}, {}}}, double, {[1 x double], [1 x double]}, double, double, {{{double, double}}}}, {{{{double, double}}, {{double, double}}}, {{{double, {}, double, {}}, double, {}}, {{double, {}, double, {}}, {}, {}}}, {}, double, {[1 x double], [2 x [1 x double]], [1 x double], {}}, double, {}, double, {{{double, double}}, {{}}}}, {{{{double, double}}}, {{{double, double}, {}}}, [32 x [2 x double]], {}, double, [2 x double], double, {{{double, double}}, {{double, double}, {}}}, {{{double, {}, double, {}}, {}, {}}, {{double, {}, double, {}}, {}, {}}, {{double, {}, double, {}}, {}, {}}}, {[2 x double], [2 x [2 x double]], [2 x double], [1 x double], [32 x double]}, double}, {{{{double, double}}}, {{{double, double}, {}}}, [25 x [32 x double]], {}, double, [25 x [32 x double]], double, {{{double, double}}, {{double, double}, {}}}, {{{double, {}, double, {}}, {}, {}}, {{double, {}, double, {}}, {}, {}}, {{double, {}, double, {}}, {}, {}}}, {[32 x double], [32 x [2 x double]], [2 x double], [1 x double], [25 x double], {}}, double}, {{{{double, double}}}, {{{double, double}, {}}}, [8 x [32 x double]], {}, double, [8 x [32 x double]], double, {{{double, double}}, {{double, double}, {}}}, {{{double, {}, double, {}}, {}, {}}, {{double, {}, double, {}}, {}, {}}, {{double, {}, double, {}}, {}, {}}}, {[32 x double], [32 x [2 x double]], [2 x double], [1 x double], [8 x double], {}}, double}, {{{{double, double}}}, {{{double, double}, {}}}, [2 x [32 x double]], {}, double, [2 x [32 x double]], double, {{{double, double}}, {{double, double}, {}}}, {{{double, {}, double, {}}, {}, {}}, {{double, {}, double, {}}, {}, {}}, {{double, {}, double, {}}, {}, {}}}, {[32 x double], [32 x [2 x double]], [2 x double], [1 x double], [2 x double], {}}, double}, {{{{double, double}}}, {{{double, double}, {}}}, [8 x [32 x double]], {}, double, [8 x [32 x double]], double, {{{double, double}}, {{double, double}, {}}}, {{{double, {}, double, {}}, {}, {}}, {{double, {}, double, {}}, {}, {}}, {{double, {}, double, {}}, {}, {}}}, {[32 x double], [32 x [2 x double]], [2 x double], [1 x double], [8 x double], {}}, double}, {{{{double, double}}}, {{{double, double}, {}}}, [25 x [32 x double]], {}, double, [25 x [32 x double]], double, {{{double, double}}, {{double, double}, {}}}, {{{double, {}, double, {}}, {}, {}}, {{double, {}, double, {}}, {}, {}}, {{double, {}, double, {}}, {}, {}}}, {[32 x double], [32 x [2 x double]], [2 x double], [1 x double], [25 x double], {}}, double}, {{}, {{{double, {}, double, {}}, {}, {}}, {{double, {}, double, {}}, {}, {}}, {{double, {}, double, {}}, {}, {}}, {{double, {}, double, {}}, {}, {}}, {{double, {}, double, {}}, {}, {}}, {{double, {}, double, {}}, {}, {}}}, double, {}, double, double, {{{}}, {{}}, {{}}, {{}}, {{}}, {{}}}}, {{}, {{{double, {}, double, {}}, {}, {}}}, double, {}, double, double, {{{}}}}, {{}, {{{double, {}, double, {}}, {}, {}}}, double, {}, double, double, {{{double, double}}}}}, {{{[800 x double]}, {}, {}}, {{[256 x double]}, {}, {}}, {{[64 x double]}, {}, {}}, {{[256 x double]}, {}, {}}, {{[800 x double]}, {}, {}}, {{[64 x double]}, {}, {}}, {{[625 x double]}, {}, {}}, {{[64 x double]}, {}, {}}, {{[4 x double]}, {}, {}}, {{[64 x double]}, {}, {}}, {{[625 x double]}, {}, {}}, {{[4 x double]}, {}, {}}, {{[4 x double]}, {}, {}}, {{[4 x double]}, {}, {}}, {{[4 x double]}, {}, {}}, {{[4 x double]}, {}, {}}, {{[1024 x double]}, {}, {}}, {{double, [2 x [1 x double]], double, {}}, [32 x [2 x double]], {[1 x double], [1 x double]}, {}, {}, {}}, {{[625 x double]}, {}, {}}, {{[1024 x double]}, {}, {}}, {{[4 x double]}, {}, {}}, {{double, [2 x [1 x double]], double, {}}, [25 x [32 x double]], {[1 x double], [1 x double]}, {}, {}, {}}, {{[4 x double]}, {}, {}}, {{[64 x double]}, {}, {}}, {{[1024 x double]}, {}, {}}, {{[4 x double]}, {}, {}}, {{double, [2 x [1 x double]], double, {}}, [8 x [32 x double]], {[1 x double], [1 x double]}, {}, {}, {}}, {{[4 x double]}, {}, {}}, {{[1024 x double]}, {}, {}}, {{[4 x double]}, {}, {}}, {{double, [2 x [1 x double]], double, {}}, [2 x [32 x double]], {[1 x double], [1 x double]}, {}, {}, {}}, {{[64 x double]}, {}, {}}, {{[1024 x double]}, {}, {}}, {{[4 x double]}, {}, {}}, {{double, [2 x [1 x double]], double, {}}, [8 x [32 x double]], {[1 x double], [1 x double]}, {}, {}, {}}, {{[625 x double]}, {}, {}}, {{[1024 x double]}, {}, {}}, {{[4 x double]}, {}, {}}, {{double, [2 x [1 x double]], double, {}}, [25 x [32 x double]], {[1 x double], [1 x double]}, {}, {}, {}}}, {}, {}, double, double, {}, double}* %".2", i32 0, i32 1, i32 0 , !dbg !7
  %"ptr_param_function_MappingProjection from CURRENT CONTEXT[RESULT] to HIDDEN LAYER[InputPort-0]" = getelementptr {{[800 x double]}, {}, {}}, {{[800 x double]}, {}, {}}* %".6", i32 0, i32 0 , !dbg !7
  %"ptr_param_matrix_LinearMatrix Function-0" = getelementptr {[800 x double]}, {[800 x double]}* %"ptr_param_function_MappingProjection from CURRENT CONTEXT[RESULT] to HIDDEN LAYER[InputPort-0]", i32 0, i32 0 , !dbg !7
  %".7" = bitcast [800 x double]* %"ptr_param_matrix_LinearMatrix Function-0" to [25 x [32 x double]]* , !dbg !7
  %".8" = alloca [25 x [32 x double]], !dbg !7
  %".9" = getelementptr [25 x [32 x double]], [25 x [32 x double]]* %".5", i32 0, i32 0, i32 0 , !dbg !7
  %".10" = getelementptr [25 x [32 x double]], [25 x [32 x double]]* %".8", i32 0, i32 0, i32 0 , !dbg !7
  call void @"__pnl_builtin_mat_scalar_mult"(double* %".9", double 0x3f847ae147ae147b, i32 25, i32 32, double* %".10"), !dbg !7
  %".12" = getelementptr [25 x [32 x double]], [25 x [32 x double]]* %".7", i32 0, i32 0, i32 0 , !dbg !7
  %".13" = getelementptr [25 x [32 x double]], [25 x [32 x double]]* %".8", i32 0, i32 0, i32 0 , !dbg !7
  %".14" = getelementptr [25 x [32 x double]], [25 x [32 x double]]* %".7", i32 0, i32 0, i32 0 , !dbg !7
  call void @"__pnl_builtin_mat_sub"(double* %".12", double* %".13", i32 25, i32 32, double* %".14"), !dbg !7
  %".16" = getelementptr {[25 x [32 x double]], [8 x [32 x double]], [2 x [32 x double]], [8 x [32 x double]], [25 x [32 x double]], [32 x [2 x double]]}, {[25 x [32 x double]], [8 x [32 x double]], [2 x [32 x double]], [8 x [32 x double]], [25 x [32 x double]], [32 x [2 x double]]}* %".4", i32 0, i32 1 , !dbg !7
  %".17" = getelementptr {{{{{{double, double}}, {{double, double}}, {{double, double}}, {{double, double}}, {{double, double}}, {{double, double}}}, {[1 x double], [1 x double], [1 x double], [1 x [25 x double]]}, {}, double, double, double, {{{double, double}}}, {double}, {{{double, {}, double, {}}, {}, {}}}, double, {[1 x double], [1 x double], [1 x double]}, {}}, {{{{double, double}}, {{double, double}}, {{double, double}}, {{double, double}}, {{double, double}}, {{double, double}}}, {[1 x double], [1 x double], [1 x double], [1 x [8 x double]]}, {}, double, double, double, {{{double, double}}}, {double}, {{{double, {}, double, {}}, {}, {}}}, double, {[1 x double], [1 x double], [1 x double]}, {}}, {{{{double, double}}, {{double, double}}, {{double, double}}, {{double, double}}, {{double, double}}, {{double, double}}}, {[1 x double], [1 x double], [1 x double], [1 x [2 x double]]}, {}, double, double, double, {{{double, double}}}, {double}, {{{double, {}, double, {}}, {}, {}}}, double, {[1 x double], [1 x double], [1 x double]}, {}}, {{{{double, double}}, {{double, double}}, {{double, double}}, {{double, double}}, {{double, double}}, {{double, double}}}, {[1 x double], [1 x double], [1 x double], [1 x [8 x double]]}, {}, double, double, double, {{{double, double}}}, {double}, {{{double, {}, double, {}}, {}, {}}}, double, {[1 x double], [1 x double], [1 x double]}, {}}, {{{{double, double}}, {{double, double}}, {{double, double}}, {{double, double}}, {{double, double}}, {{double, double}}}, {[1 x double], [1 x double], [1 x double], [1 x [25 x double]]}, {}, double, double, double, {{{double, double}}}, {double}, {{{double, {}, double, {}}, {}, {}}}, double, {[1 x double], [1 x double], [1 x double]}, {}}, {{{{double, double}}, {{double, double}}, {{double, double}}, {{double, double}}, {{double, double}}, {{double, double}}}, {[1 x double], [1 x double], [1 x double], [1 x [32 x double]]}, {}, double, double, double, {{{double, double}}}, {double}, {{{double, {}, double, {}}, {}, {}}}, double, {[1 x double], [1 x double], [1 x double]}, {}}, {{{{double, double}}, {{double, double}}}, {{{double, {}, double, {}}, {}, {}}}, double, {double, {double}, [1 x double]}, double, double, {{{double, double}}}}, {{{{double, double}}, {{double, double}}}, {{{double, {}, double, {}}, {}, {}}}, double, {[1 x double], [1 x double]}, double, double, {{{double, double}}}}, {{{{double, double}}, {{double, double}}}, {{{double, {}, double, {}}, double, {}}, {{double, {}, double, {}}, {}, {}}}, {}, double, {[1 x double], [2 x [1 x double]], [1 x double], {}}, double, {}, double, {{{double, double}}, {{}}}}, {{{{double, double}}}, {{{double, double}, {}}}, [32 x [2 x double]], {}, double, [2 x double], double, {{{double, double}}, {{double, double}, {}}}, {{{double, {}, double, {}}, {}, {}}, {{double, {}, double, {}}, {}, {}}, {{double, {}, double, {}}, {}, {}}}, {[2 x double], [2 x [2 x double]], [2 x double], [1 x double], [32 x double]}, double}, {{{{double, double}}}, {{{double, double}, {}}}, [25 x [32 x double]], {}, double, [25 x [32 x double]], double, {{{double, double}}, {{double, double}, {}}}, {{{double, {}, double, {}}, {}, {}}, {{double, {}, double, {}}, {}, {}}, {{double, {}, double, {}}, {}, {}}}, {[32 x double], [32 x [2 x double]], [2 x double], [1 x double], [25 x double], {}}, double}, {{{{double, double}}}, {{{double, double}, {}}}, [8 x [32 x double]], {}, double, [8 x [32 x double]], double, {{{double, double}}, {{double, double}, {}}}, {{{double, {}, double, {}}, {}, {}}, {{double, {}, double, {}}, {}, {}}, {{double, {}, double, {}}, {}, {}}}, {[32 x double], [32 x [2 x double]], [2 x double], [1 x double], [8 x double], {}}, double}, {{{{double, double}}}, {{{double, double}, {}}}, [2 x [32 x double]], {}, double, [2 x [32 x double]], double, {{{double, double}}, {{double, double}, {}}}, {{{double, {}, double, {}}, {}, {}}, {{double, {}, double, {}}, {}, {}}, {{double, {}, double, {}}, {}, {}}}, {[32 x double], [32 x [2 x double]], [2 x double], [1 x double], [2 x double], {}}, double}, {{{{double, double}}}, {{{double, double}, {}}}, [8 x [32 x double]], {}, double, [8 x [32 x double]], double, {{{double, double}}, {{double, double}, {}}}, {{{double, {}, double, {}}, {}, {}}, {{double, {}, double, {}}, {}, {}}, {{double, {}, double, {}}, {}, {}}}, {[32 x double], [32 x [2 x double]], [2 x double], [1 x double], [8 x double], {}}, double}, {{{{double, double}}}, {{{double, double}, {}}}, [25 x [32 x double]], {}, double, [25 x [32 x double]], double, {{{double, double}}, {{double, double}, {}}}, {{{double, {}, double, {}}, {}, {}}, {{double, {}, double, {}}, {}, {}}, {{double, {}, double, {}}, {}, {}}}, {[32 x double], [32 x [2 x double]], [2 x double], [1 x double], [25 x double], {}}, double}, {{}, {{{double, {}, double, {}}, {}, {}}, {{double, {}, double, {}}, {}, {}}, {{double, {}, double, {}}, {}, {}}, {{double, {}, double, {}}, {}, {}}, {{double, {}, double, {}}, {}, {}}, {{double, {}, double, {}}, {}, {}}}, double, {}, double, double, {{{}}, {{}}, {{}}, {{}}, {{}}, {{}}}}, {{}, {{{double, {}, double, {}}, {}, {}}}, double, {}, double, double, {{{}}}}, {{}, {{{double, {}, double, {}}, {}, {}}}, double, {}, double, double, {{{double, double}}}}}, {{{[800 x double]}, {}, {}}, {{[256 x double]}, {}, {}}, {{[64 x double]}, {}, {}}, {{[256 x double]}, {}, {}}, {{[800 x double]}, {}, {}}, {{[64 x double]}, {}, {}}, {{[625 x double]}, {}, {}}, {{[64 x double]}, {}, {}}, {{[4 x double]}, {}, {}}, {{[64 x double]}, {}, {}}, {{[625 x double]}, {}, {}}, {{[4 x double]}, {}, {}}, {{[4 x double]}, {}, {}}, {{[4 x double]}, {}, {}}, {{[4 x double]}, {}, {}}, {{[4 x double]}, {}, {}}, {{[1024 x double]}, {}, {}}, {{double, [2 x [1 x double]], double, {}}, [32 x [2 x double]], {[1 x double], [1 x double]}, {}, {}, {}}, {{[625 x double]}, {}, {}}, {{[1024 x double]}, {}, {}}, {{[4 x double]}, {}, {}}, {{double, [2 x [1 x double]], double, {}}, [25 x [32 x double]], {[1 x double], [1 x double]}, {}, {}, {}}, {{[4 x double]}, {}, {}}, {{[64 x double]}, {}, {}}, {{[1024 x double]}, {}, {}}, {{[4 x double]}, {}, {}}, {{double, [2 x [1 x double]], double, {}}, [8 x [32 x double]], {[1 x double], [1 x double]}, {}, {}, {}}, {{[4 x double]}, {}, {}}, {{[1024 x double]}, {}, {}}, {{[4 x double]}, {}, {}}, {{double, [2 x [1 x double]], double, {}}, [2 x [32 x double]], {[1 x double], [1 x double]}, {}, {}, {}}, {{[64 x double]}, {}, {}}, {{[1024 x double]}, {}, {}}, {{[4 x double]}, {}, {}}, {{double, [2 x [1 x double]], double, {}}, [8 x [32 x double]], {[1 x double], [1 x double]}, {}, {}, {}}, {{[625 x double]}, {}, {}}, {{[1024 x double]}, {}, {}}, {{[4 x double]}, {}, {}}, {{double, [2 x [1 x double]], double, {}}, [25 x [32 x double]], {[1 x double], [1 x double]}, {}, {}, {}}}, {}, {}, double, double, {}, double}, {{{{{{double, double}}, {{double, double}}, {{double, double}}, {{double, double}}, {{double, double}}, {{double, double}}}, {[1 x double], [1 x double], [1 x double], [1 x [25 x double]]}, {}, double, double, double, {{{double, double}}}, {double}, {{{double, {}, double, {}}, {}, {}}}, double, {[1 x double], [1 x double], [1 x double]}, {}}, {{{{double, double}}, {{double, double}}, {{double, double}}, {{double, double}}, {{double, double}}, {{double, double}}}, {[1 x double], [1 x double], [1 x double], [1 x [8 x double]]}, {}, double, double, double, {{{double, double}}}, {double}, {{{double, {}, double, {}}, {}, {}}}, double, {[1 x double], [1 x double], [1 x double]}, {}}, {{{{double, double}}, {{double, double}}, {{double, double}}, {{double, double}}, {{double, double}}, {{double, double}}}, {[1 x double], [1 x double], [1 x double], [1 x [2 x double]]}, {}, double, double, double, {{{double, double}}}, {double}, {{{double, {}, double, {}}, {}, {}}}, double, {[1 x double], [1 x double], [1 x double]}, {}}, {{{{double, double}}, {{double, double}}, {{double, double}}, {{double, double}}, {{double, double}}, {{double, double}}}, {[1 x double], [1 x double], [1 x double], [1 x [8 x double]]}, {}, double, double, double, {{{double, double}}}, {double}, {{{double, {}, double, {}}, {}, {}}}, double, {[1 x double], [1 x double], [1 x double]}, {}}, {{{{double, double}}, {{double, double}}, {{double, double}}, {{double, double}}, {{double, double}}, {{double, double}}}, {[1 x double], [1 x double], [1 x double], [1 x [25 x double]]}, {}, double, double, double, {{{double, double}}}, {double}, {{{double, {}, double, {}}, {}, {}}}, double, {[1 x double], [1 x double], [1 x double]}, {}}, {{{{double, double}}, {{double, double}}, {{double, double}}, {{double, double}}, {{double, double}}, {{double, double}}}, {[1 x double], [1 x double], [1 x double], [1 x [32 x double]]}, {}, double, double, double, {{{double, double}}}, {double}, {{{double, {}, double, {}}, {}, {}}}, double, {[1 x double], [1 x double], [1 x double]}, {}}, {{{{double, double}}, {{double, double}}}, {{{double, {}, double, {}}, {}, {}}}, double, {double, {double}, [1 x double]}, double, double, {{{double, double}}}}, {{{{double, double}}, {{double, double}}}, {{{double, {}, double, {}}, {}, {}}}, double, {[1 x double], [1 x double]}, double, double, {{{double, double}}}}, {{{{double, double}}, {{double, double}}}, {{{double, {}, double, {}}, double, {}}, {{double, {}, double, {}}, {}, {}}}, {}, double, {[1 x double], [2 x [1 x double]], [1 x double], {}}, double, {}, double, {{{double, double}}, {{}}}}, {{{{double, double}}}, {{{double, double}, {}}}, [32 x [2 x double]], {}, double, [2 x double], double, {{{double, double}}, {{double, double}, {}}}, {{{double, {}, double, {}}, {}, {}}, {{double, {}, double, {}}, {}, {}}, {{double, {}, double, {}}, {}, {}}}, {[2 x double], [2 x [2 x double]], [2 x double], [1 x double], [32 x double]}, double}, {{{{double, double}}}, {{{double, double}, {}}}, [25 x [32 x double]], {}, double, [25 x [32 x double]], double, {{{double, double}}, {{double, double}, {}}}, {{{double, {}, double, {}}, {}, {}}, {{double, {}, double, {}}, {}, {}}, {{double, {}, double, {}}, {}, {}}}, {[32 x double], [32 x [2 x double]], [2 x double], [1 x double], [25 x double], {}}, double}, {{{{double, double}}}, {{{double, double}, {}}}, [8 x [32 x double]], {}, double, [8 x [32 x double]], double, {{{double, double}}, {{double, double}, {}}}, {{{double, {}, double, {}}, {}, {}}, {{double, {}, double, {}}, {}, {}}, {{double, {}, double, {}}, {}, {}}}, {[32 x double], [32 x [2 x double]], [2 x double], [1 x double], [8 x double], {}}, double}, {{{{double, double}}}, {{{double, double}, {}}}, [2 x [32 x double]], {}, double, [2 x [32 x double]], double, {{{double, double}}, {{double, double}, {}}}, {{{double, {}, double, {}}, {}, {}}, {{double, {}, double, {}}, {}, {}}, {{double, {}, double, {}}, {}, {}}}, {[32 x double], [32 x [2 x double]], [2 x double], [1 x double], [2 x double], {}}, double}, {{{{double, double}}}, {{{double, double}, {}}}, [8 x [32 x double]], {}, double, [8 x [32 x double]], double, {{{double, double}}, {{double, double}, {}}}, {{{double, {}, double, {}}, {}, {}}, {{double, {}, double, {}}, {}, {}}, {{double, {}, double, {}}, {}, {}}}, {[32 x double], [32 x [2 x double]], [2 x double], [1 x double], [8 x double], {}}, double}, {{{{double, double}}}, {{{double, double}, {}}}, [25 x [32 x double]], {}, double, [25 x [32 x double]], double, {{{double, double}}, {{double, double}, {}}}, {{{double, {}, double, {}}, {}, {}}, {{double, {}, double, {}}, {}, {}}, {{double, {}, double, {}}, {}, {}}}, {[32 x double], [32 x [2 x double]], [2 x double], [1 x double], [25 x double], {}}, double}, {{}, {{{double, {}, double, {}}, {}, {}}, {{double, {}, double, {}}, {}, {}}, {{double, {}, double, {}}, {}, {}}, {{double, {}, double, {}}, {}, {}}, {{double, {}, double, {}}, {}, {}}, {{double, {}, double, {}}, {}, {}}}, double, {}, double, double, {{{}}, {{}}, {{}}, {{}}, {{}}, {{}}}}, {{}, {{{double, {}, double, {}}, {}, {}}}, double, {}, double, double, {{{}}}}, {{}, {{{double, {}, double, {}}, {}, {}}}, double, {}, double, double, {{{double, double}}}}}, {{{[800 x double]}, {}, {}}, {{[256 x double]}, {}, {}}, {{[64 x double]}, {}, {}}, {{[256 x double]}, {}, {}}, {{[800 x double]}, {}, {}}, {{[64 x double]}, {}, {}}, {{[625 x double]}, {}, {}}, {{[64 x double]}, {}, {}}, {{[4 x double]}, {}, {}}, {{[64 x double]}, {}, {}}, {{[625 x double]}, {}, {}}, {{[4 x double]}, {}, {}}, {{[4 x double]}, {}, {}}, {{[4 x double]}, {}, {}}, {{[4 x double]}, {}, {}}, {{[4 x double]}, {}, {}}, {{[1024 x double]}, {}, {}}, {{double, [2 x [1 x double]], double, {}}, [32 x [2 x double]], {[1 x double], [1 x double]}, {}, {}, {}}, {{[625 x double]}, {}, {}}, {{[1024 x double]}, {}, {}}, {{[4 x double]}, {}, {}}, {{double, [2 x [1 x double]], double, {}}, [25 x [32 x double]], {[1 x double], [1 x double]}, {}, {}, {}}, {{[4 x double]}, {}, {}}, {{[64 x double]}, {}, {}}, {{[1024 x double]}, {}, {}}, {{[4 x double]}, {}, {}}, {{double, [2 x [1 x double]], double, {}}, [8 x [32 x double]], {[1 x double], [1 x double]}, {}, {}, {}}, {{[4 x double]}, {}, {}}, {{[1024 x double]}, {}, {}}, {{[4 x double]}, {}, {}}, {{double, [2 x [1 x double]], double, {}}, [2 x [32 x double]], {[1 x double], [1 x double]}, {}, {}, {}}, {{[64 x double]}, {}, {}}, {{[1024 x double]}, {}, {}}, {{[4 x double]}, {}, {}}, {{double, [2 x [1 x double]], double, {}}, [8 x [32 x double]], {[1 x double], [1 x double]}, {}, {}, {}}, {{[625 x double]}, {}, {}}, {{[1024 x double]}, {}, {}}, {{[4 x double]}, {}, {}}, {{double, [2 x [1 x double]], double, {}}, [25 x [32 x double]], {[1 x double], [1 x double]}, {}, {}, {}}}, {}, {}, double, double, {}, double}* %".2", i32 0, i32 1, i32 1 , !dbg !7
  %"ptr_param_function_MappingProjection from RETRIEVED STIMULUS[RESULT] to HIDDEN LAYER[InputPort-0]" = getelementptr {{[256 x double]}, {}, {}}, {{[256 x double]}, {}, {}}* %".17", i32 0, i32 0 , !dbg !7
  %"ptr_param_matrix_LinearMatrix Function-1" = getelementptr {[256 x double]}, {[256 x double]}* %"ptr_param_function_MappingProjection from RETRIEVED STIMULUS[RESULT] to HIDDEN LAYER[InputPort-0]", i32 0, i32 0 , !dbg !7
  %".18" = bitcast [256 x double]* %"ptr_param_matrix_LinearMatrix Function-1" to [8 x [32 x double]]* , !dbg !7
  %".19" = alloca [8 x [32 x double]], !dbg !7
  %".20" = getelementptr [8 x [32 x double]], [8 x [32 x double]]* %".16", i32 0, i32 0, i32 0 , !dbg !7
  %".21" = getelementptr [8 x [32 x double]], [8 x [32 x double]]* %".19", i32 0, i32 0, i32 0 , !dbg !7
  call void @"__pnl_builtin_mat_scalar_mult"(double* %".20", double 0x3f847ae147ae147b, i32 8, i32 32, double* %".21"), !dbg !7
  %".23" = getelementptr [8 x [32 x double]], [8 x [32 x double]]* %".18", i32 0, i32 0, i32 0 , !dbg !7
  %".24" = getelementptr [8 x [32 x double]], [8 x [32 x double]]* %".19", i32 0, i32 0, i32 0 , !dbg !7
  %".25" = getelementptr [8 x [32 x double]], [8 x [32 x double]]* %".18", i32 0, i32 0, i32 0 , !dbg !7
  call void @"__pnl_builtin_mat_sub"(double* %".23", double* %".24", i32 8, i32 32, double* %".25"), !dbg !7
  %".27" = getelementptr {[25 x [32 x double]], [8 x [32 x double]], [2 x [32 x double]], [8 x [32 x double]], [25 x [32 x double]], [32 x [2 x double]]}, {[25 x [32 x double]], [8 x [32 x double]], [2 x [32 x double]], [8 x [32 x double]], [25 x [32 x double]], [32 x [2 x double]]}* %".4", i32 0, i32 2 , !dbg !7
  %".28" = getelementptr {{{{{{double, double}}, {{double, double}}, {{double, double}}, {{double, double}}, {{double, double}}, {{double, double}}}, {[1 x double], [1 x double], [1 x double], [1 x [25 x double]]}, {}, double, double, double, {{{double, double}}}, {double}, {{{double, {}, double, {}}, {}, {}}}, double, {[1 x double], [1 x double], [1 x double]}, {}}, {{{{double, double}}, {{double, double}}, {{double, double}}, {{double, double}}, {{double, double}}, {{double, double}}}, {[1 x double], [1 x double], [1 x double], [1 x [8 x double]]}, {}, double, double, double, {{{double, double}}}, {double}, {{{double, {}, double, {}}, {}, {}}}, double, {[1 x double], [1 x double], [1 x double]}, {}}, {{{{double, double}}, {{double, double}}, {{double, double}}, {{double, double}}, {{double, double}}, {{double, double}}}, {[1 x double], [1 x double], [1 x double], [1 x [2 x double]]}, {}, double, double, double, {{{double, double}}}, {double}, {{{double, {}, double, {}}, {}, {}}}, double, {[1 x double], [1 x double], [1 x double]}, {}}, {{{{double, double}}, {{double, double}}, {{double, double}}, {{double, double}}, {{double, double}}, {{double, double}}}, {[1 x double], [1 x double], [1 x double], [1 x [8 x double]]}, {}, double, double, double, {{{double, double}}}, {double}, {{{double, {}, double, {}}, {}, {}}}, double, {[1 x double], [1 x double], [1 x double]}, {}}, {{{{double, double}}, {{double, double}}, {{double, double}}, {{double, double}}, {{double, double}}, {{double, double}}}, {[1 x double], [1 x double], [1 x double], [1 x [25 x double]]}, {}, double, double, double, {{{double, double}}}, {double}, {{{double, {}, double, {}}, {}, {}}}, double, {[1 x double], [1 x double], [1 x double]}, {}}, {{{{double, double}}, {{double, double}}, {{double, double}}, {{double, double}}, {{double, double}}, {{double, double}}}, {[1 x double], [1 x double], [1 x double], [1 x [32 x double]]}, {}, double, double, double, {{{double, double}}}, {double}, {{{double, {}, double, {}}, {}, {}}}, double, {[1 x double], [1 x double], [1 x double]}, {}}, {{{{double, double}}, {{double, double}}}, {{{double, {}, double, {}}, {}, {}}}, double, {double, {double}, [1 x double]}, double, double, {{{double, double}}}}, {{{{double, double}}, {{double, double}}}, {{{double, {}, double, {}}, {}, {}}}, double, {[1 x double], [1 x double]}, double, double, {{{double, double}}}}, {{{{double, double}}, {{double, double}}}, {{{double, {}, double, {}}, double, {}}, {{double, {}, double, {}}, {}, {}}}, {}, double, {[1 x double], [2 x [1 x double]], [1 x double], {}}, double, {}, double, {{{double, double}}, {{}}}}, {{{{double, double}}}, {{{double, double}, {}}}, [32 x [2 x double]], {}, double, [2 x double], double, {{{double, double}}, {{double, double}, {}}}, {{{double, {}, double, {}}, {}, {}}, {{double, {}, double, {}}, {}, {}}, {{double, {}, double, {}}, {}, {}}}, {[2 x double], [2 x [2 x double]], [2 x double], [1 x double], [32 x double]}, double}, {{{{double, double}}}, {{{double, double}, {}}}, [25 x [32 x double]], {}, double, [25 x [32 x double]], double, {{{double, double}}, {{double, double}, {}}}, {{{double, {}, double, {}}, {}, {}}, {{double, {}, double, {}}, {}, {}}, {{double, {}, double, {}}, {}, {}}}, {[32 x double], [32 x [2 x double]], [2 x double], [1 x double], [25 x double], {}}, double}, {{{{double, double}}}, {{{double, double}, {}}}, [8 x [32 x double]], {}, double, [8 x [32 x double]], double, {{{double, double}}, {{double, double}, {}}}, {{{double, {}, double, {}}, {}, {}}, {{double, {}, double, {}}, {}, {}}, {{double, {}, double, {}}, {}, {}}}, {[32 x double], [32 x [2 x double]], [2 x double], [1 x double], [8 x double], {}}, double}, {{{{double, double}}}, {{{double, double}, {}}}, [2 x [32 x double]], {}, double, [2 x [32 x double]], double, {{{double, double}}, {{double, double}, {}}}, {{{double, {}, double, {}}, {}, {}}, {{double, {}, double, {}}, {}, {}}, {{double, {}, double, {}}, {}, {}}}, {[32 x double], [32 x [2 x double]], [2 x double], [1 x double], [2 x double], {}}, double}, {{{{double, double}}}, {{{double, double}, {}}}, [8 x [32 x double]], {}, double, [8 x [32 x double]], double, {{{double, double}}, {{double, double}, {}}}, {{{double, {}, double, {}}, {}, {}}, {{double, {}, double, {}}, {}, {}}, {{double, {}, double, {}}, {}, {}}}, {[32 x double], [32 x [2 x double]], [2 x double], [1 x double], [8 x double], {}}, double}, {{{{double, double}}}, {{{double, double}, {}}}, [25 x [32 x double]], {}, double, [25 x [32 x double]], double, {{{double, double}}, {{double, double}, {}}}, {{{double, {}, double, {}}, {}, {}}, {{double, {}, double, {}}, {}, {}}, {{double, {}, double, {}}, {}, {}}}, {[32 x double], [32 x [2 x double]], [2 x double], [1 x double], [25 x double], {}}, double}, {{}, {{{double, {}, double, {}}, {}, {}}, {{double, {}, double, {}}, {}, {}}, {{double, {}, double, {}}, {}, {}}, {{double, {}, double, {}}, {}, {}}, {{double, {}, double, {}}, {}, {}}, {{double, {}, double, {}}, {}, {}}}, double, {}, double, double, {{{}}, {{}}, {{}}, {{}}, {{}}, {{}}}}, {{}, {{{double, {}, double, {}}, {}, {}}}, double, {}, double, double, {{{}}}}, {{}, {{{double, {}, double, {}}, {}, {}}}, double, {}, double, double, {{{double, double}}}}}, {{{[800 x double]}, {}, {}}, {{[256 x double]}, {}, {}}, {{[64 x double]}, {}, {}}, {{[256 x double]}, {}, {}}, {{[800 x double]}, {}, {}}, {{[64 x double]}, {}, {}}, {{[625 x double]}, {}, {}}, {{[64 x double]}, {}, {}}, {{[4 x double]}, {}, {}}, {{[64 x double]}, {}, {}}, {{[625 x double]}, {}, {}}, {{[4 x double]}, {}, {}}, {{[4 x double]}, {}, {}}, {{[4 x double]}, {}, {}}, {{[4 x double]}, {}, {}}, {{[4 x double]}, {}, {}}, {{[1024 x double]}, {}, {}}, {{double, [2 x [1 x double]], double, {}}, [32 x [2 x double]], {[1 x double], [1 x double]}, {}, {}, {}}, {{[625 x double]}, {}, {}}, {{[1024 x double]}, {}, {}}, {{[4 x double]}, {}, {}}, {{double, [2 x [1 x double]], double, {}}, [25 x [32 x double]], {[1 x double], [1 x double]}, {}, {}, {}}, {{[4 x double]}, {}, {}}, {{[64 x double]}, {}, {}}, {{[1024 x double]}, {}, {}}, {{[4 x double]}, {}, {}}, {{double, [2 x [1 x double]], double, {}}, [8 x [32 x double]], {[1 x double], [1 x double]}, {}, {}, {}}, {{[4 x double]}, {}, {}}, {{[1024 x double]}, {}, {}}, {{[4 x double]}, {}, {}}, {{double, [2 x [1 x double]], double, {}}, [2 x [32 x double]], {[1 x double], [1 x double]}, {}, {}, {}}, {{[64 x double]}, {}, {}}, {{[1024 x double]}, {}, {}}, {{[4 x double]}, {}, {}}, {{double, [2 x [1 x double]], double, {}}, [8 x [32 x double]], {[1 x double], [1 x double]}, {}, {}, {}}, {{[625 x double]}, {}, {}}, {{[1024 x double]}, {}, {}}, {{[4 x double]}, {}, {}}, {{double, [2 x [1 x double]], double, {}}, [25 x [32 x double]], {[1 x double], [1 x double]}, {}, {}, {}}}, {}, {}, double, double, {}, double}, {{{{{{double, double}}, {{double, double}}, {{double, double}}, {{double, double}}, {{double, double}}, {{double, double}}}, {[1 x double], [1 x double], [1 x double], [1 x [25 x double]]}, {}, double, double, double, {{{double, double}}}, {double}, {{{double, {}, double, {}}, {}, {}}}, double, {[1 x double], [1 x double], [1 x double]}, {}}, {{{{double, double}}, {{double, double}}, {{double, double}}, {{double, double}}, {{double, double}}, {{double, double}}}, {[1 x double], [1 x double], [1 x double], [1 x [8 x double]]}, {}, double, double, double, {{{double, double}}}, {double}, {{{double, {}, double, {}}, {}, {}}}, double, {[1 x double], [1 x double], [1 x double]}, {}}, {{{{double, double}}, {{double, double}}, {{double, double}}, {{double, double}}, {{double, double}}, {{double, double}}}, {[1 x double], [1 x double], [1 x double], [1 x [2 x double]]}, {}, double, double, double, {{{double, double}}}, {double}, {{{double, {}, double, {}}, {}, {}}}, double, {[1 x double], [1 x double], [1 x double]}, {}}, {{{{double, double}}, {{double, double}}, {{double, double}}, {{double, double}}, {{double, double}}, {{double, double}}}, {[1 x double], [1 x double], [1 x double], [1 x [8 x double]]}, {}, double, double, double, {{{double, double}}}, {double}, {{{double, {}, double, {}}, {}, {}}}, double, {[1 x double], [1 x double], [1 x double]}, {}}, {{{{double, double}}, {{double, double}}, {{double, double}}, {{double, double}}, {{double, double}}, {{double, double}}}, {[1 x double], [1 x double], [1 x double], [1 x [25 x double]]}, {}, double, double, double, {{{double, double}}}, {double}, {{{double, {}, double, {}}, {}, {}}}, double, {[1 x double], [1 x double], [1 x double]}, {}}, {{{{double, double}}, {{double, double}}, {{double, double}}, {{double, double}}, {{double, double}}, {{double, double}}}, {[1 x double], [1 x double], [1 x double], [1 x [32 x double]]}, {}, double, double, double, {{{double, double}}}, {double}, {{{double, {}, double, {}}, {}, {}}}, double, {[1 x double], [1 x double], [1 x double]}, {}}, {{{{double, double}}, {{double, double}}}, {{{double, {}, double, {}}, {}, {}}}, double, {double, {double}, [1 x double]}, double, double, {{{double, double}}}}, {{{{double, double}}, {{double, double}}}, {{{double, {}, double, {}}, {}, {}}}, double, {[1 x double], [1 x double]}, double, double, {{{double, double}}}}, {{{{double, double}}, {{double, double}}}, {{{double, {}, double, {}}, double, {}}, {{double, {}, double, {}}, {}, {}}}, {}, double, {[1 x double], [2 x [1 x double]], [1 x double], {}}, double, {}, double, {{{double, double}}, {{}}}}, {{{{double, double}}}, {{{double, double}, {}}}, [32 x [2 x double]], {}, double, [2 x double], double, {{{double, double}}, {{double, double}, {}}}, {{{double, {}, double, {}}, {}, {}}, {{double, {}, double, {}}, {}, {}}, {{double, {}, double, {}}, {}, {}}}, {[2 x double], [2 x [2 x double]], [2 x double], [1 x double], [32 x double]}, double}, {{{{double, double}}}, {{{double, double}, {}}}, [25 x [32 x double]], {}, double, [25 x [32 x double]], double, {{{double, double}}, {{double, double}, {}}}, {{{double, {}, double, {}}, {}, {}}, {{double, {}, double, {}}, {}, {}}, {{double, {}, double, {}}, {}, {}}}, {[32 x double], [32 x [2 x double]], [2 x double], [1 x double], [25 x double], {}}, double}, {{{{double, double}}}, {{{double, double}, {}}}, [8 x [32 x double]], {}, double, [8 x [32 x double]], double, {{{double, double}}, {{double, double}, {}}}, {{{double, {}, double, {}}, {}, {}}, {{double, {}, double, {}}, {}, {}}, {{double, {}, double, {}}, {}, {}}}, {[32 x double], [32 x [2 x double]], [2 x double], [1 x double], [8 x double], {}}, double}, {{{{double, double}}}, {{{double, double}, {}}}, [2 x [32 x double]], {}, double, [2 x [32 x double]], double, {{{double, double}}, {{double, double}, {}}}, {{{double, {}, double, {}}, {}, {}}, {{double, {}, double, {}}, {}, {}}, {{double, {}, double, {}}, {}, {}}}, {[32 x double], [32 x [2 x double]], [2 x double], [1 x double], [2 x double], {}}, double}, {{{{double, double}}}, {{{double, double}, {}}}, [8 x [32 x double]], {}, double, [8 x [32 x double]], double, {{{double, double}}, {{double, double}, {}}}, {{{double, {}, double, {}}, {}, {}}, {{double, {}, double, {}}, {}, {}}, {{double, {}, double, {}}, {}, {}}}, {[32 x double], [32 x [2 x double]], [2 x double], [1 x double], [8 x double], {}}, double}, {{{{double, double}}}, {{{double, double}, {}}}, [25 x [32 x double]], {}, double, [25 x [32 x double]], double, {{{double, double}}, {{double, double}, {}}}, {{{double, {}, double, {}}, {}, {}}, {{double, {}, double, {}}, {}, {}}, {{double, {}, double, {}}, {}, {}}}, {[32 x double], [32 x [2 x double]], [2 x double], [1 x double], [25 x double], {}}, double}, {{}, {{{double, {}, double, {}}, {}, {}}, {{double, {}, double, {}}, {}, {}}, {{double, {}, double, {}}, {}, {}}, {{double, {}, double, {}}, {}, {}}, {{double, {}, double, {}}, {}, {}}, {{double, {}, double, {}}, {}, {}}}, double, {}, double, double, {{{}}, {{}}, {{}}, {{}}, {{}}, {{}}}}, {{}, {{{double, {}, double, {}}, {}, {}}}, double, {}, double, double, {{{}}}}, {{}, {{{double, {}, double, {}}, {}, {}}}, double, {}, double, double, {{{double, double}}}}}, {{{[800 x double]}, {}, {}}, {{[256 x double]}, {}, {}}, {{[64 x double]}, {}, {}}, {{[256 x double]}, {}, {}}, {{[800 x double]}, {}, {}}, {{[64 x double]}, {}, {}}, {{[625 x double]}, {}, {}}, {{[64 x double]}, {}, {}}, {{[4 x double]}, {}, {}}, {{[64 x double]}, {}, {}}, {{[625 x double]}, {}, {}}, {{[4 x double]}, {}, {}}, {{[4 x double]}, {}, {}}, {{[4 x double]}, {}, {}}, {{[4 x double]}, {}, {}}, {{[4 x double]}, {}, {}}, {{[1024 x double]}, {}, {}}, {{double, [2 x [1 x double]], double, {}}, [32 x [2 x double]], {[1 x double], [1 x double]}, {}, {}, {}}, {{[625 x double]}, {}, {}}, {{[1024 x double]}, {}, {}}, {{[4 x double]}, {}, {}}, {{double, [2 x [1 x double]], double, {}}, [25 x [32 x double]], {[1 x double], [1 x double]}, {}, {}, {}}, {{[4 x double]}, {}, {}}, {{[64 x double]}, {}, {}}, {{[1024 x double]}, {}, {}}, {{[4 x double]}, {}, {}}, {{double, [2 x [1 x double]], double, {}}, [8 x [32 x double]], {[1 x double], [1 x double]}, {}, {}, {}}, {{[4 x double]}, {}, {}}, {{[1024 x double]}, {}, {}}, {{[4 x double]}, {}, {}}, {{double, [2 x [1 x double]], double, {}}, [2 x [32 x double]], {[1 x double], [1 x double]}, {}, {}, {}}, {{[64 x double]}, {}, {}}, {{[1024 x double]}, {}, {}}, {{[4 x double]}, {}, {}}, {{double, [2 x [1 x double]], double, {}}, [8 x [32 x double]], {[1 x double], [1 x double]}, {}, {}, {}}, {{[625 x double]}, {}, {}}, {{[1024 x double]}, {}, {}}, {{[4 x double]}, {}, {}}, {{double, [2 x [1 x double]], double, {}}, [25 x [32 x double]], {[1 x double], [1 x double]}, {}, {}, {}}}, {}, {}, double, double, {}, double}* %".2", i32 0, i32 1, i32 2 , !dbg !7
  %"ptr_param_function_MappingProjection from CURRENT TASK[RESULT] to HIDDEN LAYER[InputPort-0]" = getelementptr {{[64 x double]}, {}, {}}, {{[64 x double]}, {}, {}}* %".28", i32 0, i32 0 , !dbg !7
  %"ptr_param_matrix_LinearMatrix Function-2" = getelementptr {[64 x double]}, {[64 x double]}* %"ptr_param_function_MappingProjection from CURRENT TASK[RESULT] to HIDDEN LAYER[InputPort-0]", i32 0, i32 0 , !dbg !7
  %".29" = bitcast [64 x double]* %"ptr_param_matrix_LinearMatrix Function-2" to [2 x [32 x double]]* , !dbg !7
  %".30" = alloca [2 x [32 x double]], !dbg !7
  %".31" = getelementptr [2 x [32 x double]], [2 x [32 x double]]* %".27", i32 0, i32 0, i32 0 , !dbg !7
  %".32" = getelementptr [2 x [32 x double]], [2 x [32 x double]]* %".30", i32 0, i32 0, i32 0 , !dbg !7
  call void @"__pnl_builtin_mat_scalar_mult"(double* %".31", double 0x3f847ae147ae147b, i32 2, i32 32, double* %".32"), !dbg !7
  %".34" = getelementptr [2 x [32 x double]], [2 x [32 x double]]* %".29", i32 0, i32 0, i32 0 , !dbg !7
  %".35" = getelementptr [2 x [32 x double]], [2 x [32 x double]]* %".30", i32 0, i32 0, i32 0 , !dbg !7
  %".36" = getelementptr [2 x [32 x double]], [2 x [32 x double]]* %".29", i32 0, i32 0, i32 0 , !dbg !7
  call void @"__pnl_builtin_mat_sub"(double* %".34", double* %".35", i32 2, i32 32, double* %".36"), !dbg !7
  %".38" = getelementptr {[25 x [32 x double]], [8 x [32 x double]], [2 x [32 x double]], [8 x [32 x double]], [25 x [32 x double]], [32 x [2 x double]]}, {[25 x [32 x double]], [8 x [32 x double]], [2 x [32 x double]], [8 x [32 x double]], [25 x [32 x double]], [32 x [2 x double]]}* %".4", i32 0, i32 3 , !dbg !7
  %".39" = getelementptr {{{{{{double, double}}, {{double, double}}, {{double, double}}, {{double, double}}, {{double, double}}, {{double, double}}}, {[1 x double], [1 x double], [1 x double], [1 x [25 x double]]}, {}, double, double, double, {{{double, double}}}, {double}, {{{double, {}, double, {}}, {}, {}}}, double, {[1 x double], [1 x double], [1 x double]}, {}}, {{{{double, double}}, {{double, double}}, {{double, double}}, {{double, double}}, {{double, double}}, {{double, double}}}, {[1 x double], [1 x double], [1 x double], [1 x [8 x double]]}, {}, double, double, double, {{{double, double}}}, {double}, {{{double, {}, double, {}}, {}, {}}}, double, {[1 x double], [1 x double], [1 x double]}, {}}, {{{{double, double}}, {{double, double}}, {{double, double}}, {{double, double}}, {{double, double}}, {{double, double}}}, {[1 x double], [1 x double], [1 x double], [1 x [2 x double]]}, {}, double, double, double, {{{double, double}}}, {double}, {{{double, {}, double, {}}, {}, {}}}, double, {[1 x double], [1 x double], [1 x double]}, {}}, {{{{double, double}}, {{double, double}}, {{double, double}}, {{double, double}}, {{double, double}}, {{double, double}}}, {[1 x double], [1 x double], [1 x double], [1 x [8 x double]]}, {}, double, double, double, {{{double, double}}}, {double}, {{{double, {}, double, {}}, {}, {}}}, double, {[1 x double], [1 x double], [1 x double]}, {}}, {{{{double, double}}, {{double, double}}, {{double, double}}, {{double, double}}, {{double, double}}, {{double, double}}}, {[1 x double], [1 x double], [1 x double], [1 x [25 x double]]}, {}, double, double, double, {{{double, double}}}, {double}, {{{double, {}, double, {}}, {}, {}}}, double, {[1 x double], [1 x double], [1 x double]}, {}}, {{{{double, double}}, {{double, double}}, {{double, double}}, {{double, double}}, {{double, double}}, {{double, double}}}, {[1 x double], [1 x double], [1 x double], [1 x [32 x double]]}, {}, double, double, double, {{{double, double}}}, {double}, {{{double, {}, double, {}}, {}, {}}}, double, {[1 x double], [1 x double], [1 x double]}, {}}, {{{{double, double}}, {{double, double}}}, {{{double, {}, double, {}}, {}, {}}}, double, {double, {double}, [1 x double]}, double, double, {{{double, double}}}}, {{{{double, double}}, {{double, double}}}, {{{double, {}, double, {}}, {}, {}}}, double, {[1 x double], [1 x double]}, double, double, {{{double, double}}}}, {{{{double, double}}, {{double, double}}}, {{{double, {}, double, {}}, double, {}}, {{double, {}, double, {}}, {}, {}}}, {}, double, {[1 x double], [2 x [1 x double]], [1 x double], {}}, double, {}, double, {{{double, double}}, {{}}}}, {{{{double, double}}}, {{{double, double}, {}}}, [32 x [2 x double]], {}, double, [2 x double], double, {{{double, double}}, {{double, double}, {}}}, {{{double, {}, double, {}}, {}, {}}, {{double, {}, double, {}}, {}, {}}, {{double, {}, double, {}}, {}, {}}}, {[2 x double], [2 x [2 x double]], [2 x double], [1 x double], [32 x double]}, double}, {{{{double, double}}}, {{{double, double}, {}}}, [25 x [32 x double]], {}, double, [25 x [32 x double]], double, {{{double, double}}, {{double, double}, {}}}, {{{double, {}, double, {}}, {}, {}}, {{double, {}, double, {}}, {}, {}}, {{double, {}, double, {}}, {}, {}}}, {[32 x double], [32 x [2 x double]], [2 x double], [1 x double], [25 x double], {}}, double}, {{{{double, double}}}, {{{double, double}, {}}}, [8 x [32 x double]], {}, double, [8 x [32 x double]], double, {{{double, double}}, {{double, double}, {}}}, {{{double, {}, double, {}}, {}, {}}, {{double, {}, double, {}}, {}, {}}, {{double, {}, double, {}}, {}, {}}}, {[32 x double], [32 x [2 x double]], [2 x double], [1 x double], [8 x double], {}}, double}, {{{{double, double}}}, {{{double, double}, {}}}, [2 x [32 x double]], {}, double, [2 x [32 x double]], double, {{{double, double}}, {{double, double}, {}}}, {{{double, {}, double, {}}, {}, {}}, {{double, {}, double, {}}, {}, {}}, {{double, {}, double, {}}, {}, {}}}, {[32 x double], [32 x [2 x double]], [2 x double], [1 x double], [2 x double], {}}, double}, {{{{double, double}}}, {{{double, double}, {}}}, [8 x [32 x double]], {}, double, [8 x [32 x double]], double, {{{double, double}}, {{double, double}, {}}}, {{{double, {}, double, {}}, {}, {}}, {{double, {}, double, {}}, {}, {}}, {{double, {}, double, {}}, {}, {}}}, {[32 x double], [32 x [2 x double]], [2 x double], [1 x double], [8 x double], {}}, double}, {{{{double, double}}}, {{{double, double}, {}}}, [25 x [32 x double]], {}, double, [25 x [32 x double]], double, {{{double, double}}, {{double, double}, {}}}, {{{double, {}, double, {}}, {}, {}}, {{double, {}, double, {}}, {}, {}}, {{double, {}, double, {}}, {}, {}}}, {[32 x double], [32 x [2 x double]], [2 x double], [1 x double], [25 x double], {}}, double}, {{}, {{{double, {}, double, {}}, {}, {}}, {{double, {}, double, {}}, {}, {}}, {{double, {}, double, {}}, {}, {}}, {{double, {}, double, {}}, {}, {}}, {{double, {}, double, {}}, {}, {}}, {{double, {}, double, {}}, {}, {}}}, double, {}, double, double, {{{}}, {{}}, {{}}, {{}}, {{}}, {{}}}}, {{}, {{{double, {}, double, {}}, {}, {}}}, double, {}, double, double, {{{}}}}, {{}, {{{double, {}, double, {}}, {}, {}}}, double, {}, double, double, {{{double, double}}}}}, {{{[800 x double]}, {}, {}}, {{[256 x double]}, {}, {}}, {{[64 x double]}, {}, {}}, {{[256 x double]}, {}, {}}, {{[800 x double]}, {}, {}}, {{[64 x double]}, {}, {}}, {{[625 x double]}, {}, {}}, {{[64 x double]}, {}, {}}, {{[4 x double]}, {}, {}}, {{[64 x double]}, {}, {}}, {{[625 x double]}, {}, {}}, {{[4 x double]}, {}, {}}, {{[4 x double]}, {}, {}}, {{[4 x double]}, {}, {}}, {{[4 x double]}, {}, {}}, {{[4 x double]}, {}, {}}, {{[1024 x double]}, {}, {}}, {{double, [2 x [1 x double]], double, {}}, [32 x [2 x double]], {[1 x double], [1 x double]}, {}, {}, {}}, {{[625 x double]}, {}, {}}, {{[1024 x double]}, {}, {}}, {{[4 x double]}, {}, {}}, {{double, [2 x [1 x double]], double, {}}, [25 x [32 x double]], {[1 x double], [1 x double]}, {}, {}, {}}, {{[4 x double]}, {}, {}}, {{[64 x double]}, {}, {}}, {{[1024 x double]}, {}, {}}, {{[4 x double]}, {}, {}}, {{double, [2 x [1 x double]], double, {}}, [8 x [32 x double]], {[1 x double], [1 x double]}, {}, {}, {}}, {{[4 x double]}, {}, {}}, {{[1024 x double]}, {}, {}}, {{[4 x double]}, {}, {}}, {{double, [2 x [1 x double]], double, {}}, [2 x [32 x double]], {[1 x double], [1 x double]}, {}, {}, {}}, {{[64 x double]}, {}, {}}, {{[1024 x double]}, {}, {}}, {{[4 x double]}, {}, {}}, {{double, [2 x [1 x double]], double, {}}, [8 x [32 x double]], {[1 x double], [1 x double]}, {}, {}, {}}, {{[625 x double]}, {}, {}}, {{[1024 x double]}, {}, {}}, {{[4 x double]}, {}, {}}, {{double, [2 x [1 x double]], double, {}}, [25 x [32 x double]], {[1 x double], [1 x double]}, {}, {}, {}}}, {}, {}, double, double, {}, double}, {{{{{{double, double}}, {{double, double}}, {{double, double}}, {{double, double}}, {{double, double}}, {{double, double}}}, {[1 x double], [1 x double], [1 x double], [1 x [25 x double]]}, {}, double, double, double, {{{double, double}}}, {double}, {{{double, {}, double, {}}, {}, {}}}, double, {[1 x double], [1 x double], [1 x double]}, {}}, {{{{double, double}}, {{double, double}}, {{double, double}}, {{double, double}}, {{double, double}}, {{double, double}}}, {[1 x double], [1 x double], [1 x double], [1 x [8 x double]]}, {}, double, double, double, {{{double, double}}}, {double}, {{{double, {}, double, {}}, {}, {}}}, double, {[1 x double], [1 x double], [1 x double]}, {}}, {{{{double, double}}, {{double, double}}, {{double, double}}, {{double, double}}, {{double, double}}, {{double, double}}}, {[1 x double], [1 x double], [1 x double], [1 x [2 x double]]}, {}, double, double, double, {{{double, double}}}, {double}, {{{double, {}, double, {}}, {}, {}}}, double, {[1 x double], [1 x double], [1 x double]}, {}}, {{{{double, double}}, {{double, double}}, {{double, double}}, {{double, double}}, {{double, double}}, {{double, double}}}, {[1 x double], [1 x double], [1 x double], [1 x [8 x double]]}, {}, double, double, double, {{{double, double}}}, {double}, {{{double, {}, double, {}}, {}, {}}}, double, {[1 x double], [1 x double], [1 x double]}, {}}, {{{{double, double}}, {{double, double}}, {{double, double}}, {{double, double}}, {{double, double}}, {{double, double}}}, {[1 x double], [1 x double], [1 x double], [1 x [25 x double]]}, {}, double, double, double, {{{double, double}}}, {double}, {{{double, {}, double, {}}, {}, {}}}, double, {[1 x double], [1 x double], [1 x double]}, {}}, {{{{double, double}}, {{double, double}}, {{double, double}}, {{double, double}}, {{double, double}}, {{double, double}}}, {[1 x double], [1 x double], [1 x double], [1 x [32 x double]]}, {}, double, double, double, {{{double, double}}}, {double}, {{{double, {}, double, {}}, {}, {}}}, double, {[1 x double], [1 x double], [1 x double]}, {}}, {{{{double, double}}, {{double, double}}}, {{{double, {}, double, {}}, {}, {}}}, double, {double, {double}, [1 x double]}, double, double, {{{double, double}}}}, {{{{double, double}}, {{double, double}}}, {{{double, {}, double, {}}, {}, {}}}, double, {[1 x double], [1 x double]}, double, double, {{{double, double}}}}, {{{{double, double}}, {{double, double}}}, {{{double, {}, double, {}}, double, {}}, {{double, {}, double, {}}, {}, {}}}, {}, double, {[1 x double], [2 x [1 x double]], [1 x double], {}}, double, {}, double, {{{double, double}}, {{}}}}, {{{{double, double}}}, {{{double, double}, {}}}, [32 x [2 x double]], {}, double, [2 x double], double, {{{double, double}}, {{double, double}, {}}}, {{{double, {}, double, {}}, {}, {}}, {{double, {}, double, {}}, {}, {}}, {{double, {}, double, {}}, {}, {}}}, {[2 x double], [2 x [2 x double]], [2 x double], [1 x double], [32 x double]}, double}, {{{{double, double}}}, {{{double, double}, {}}}, [25 x [32 x double]], {}, double, [25 x [32 x double]], double, {{{double, double}}, {{double, double}, {}}}, {{{double, {}, double, {}}, {}, {}}, {{double, {}, double, {}}, {}, {}}, {{double, {}, double, {}}, {}, {}}}, {[32 x double], [32 x [2 x double]], [2 x double], [1 x double], [25 x double], {}}, double}, {{{{double, double}}}, {{{double, double}, {}}}, [8 x [32 x double]], {}, double, [8 x [32 x double]], double, {{{double, double}}, {{double, double}, {}}}, {{{double, {}, double, {}}, {}, {}}, {{double, {}, double, {}}, {}, {}}, {{double, {}, double, {}}, {}, {}}}, {[32 x double], [32 x [2 x double]], [2 x double], [1 x double], [8 x double], {}}, double}, {{{{double, double}}}, {{{double, double}, {}}}, [2 x [32 x double]], {}, double, [2 x [32 x double]], double, {{{double, double}}, {{double, double}, {}}}, {{{double, {}, double, {}}, {}, {}}, {{double, {}, double, {}}, {}, {}}, {{double, {}, double, {}}, {}, {}}}, {[32 x double], [32 x [2 x double]], [2 x double], [1 x double], [2 x double], {}}, double}, {{{{double, double}}}, {{{double, double}, {}}}, [8 x [32 x double]], {}, double, [8 x [32 x double]], double, {{{double, double}}, {{double, double}, {}}}, {{{double, {}, double, {}}, {}, {}}, {{double, {}, double, {}}, {}, {}}, {{double, {}, double, {}}, {}, {}}}, {[32 x double], [32 x [2 x double]], [2 x double], [1 x double], [8 x double], {}}, double}, {{{{double, double}}}, {{{double, double}, {}}}, [25 x [32 x double]], {}, double, [25 x [32 x double]], double, {{{double, double}}, {{double, double}, {}}}, {{{double, {}, double, {}}, {}, {}}, {{double, {}, double, {}}, {}, {}}, {{double, {}, double, {}}, {}, {}}}, {[32 x double], [32 x [2 x double]], [2 x double], [1 x double], [25 x double], {}}, double}, {{}, {{{double, {}, double, {}}, {}, {}}, {{double, {}, double, {}}, {}, {}}, {{double, {}, double, {}}, {}, {}}, {{double, {}, double, {}}, {}, {}}, {{double, {}, double, {}}, {}, {}}, {{double, {}, double, {}}, {}, {}}}, double, {}, double, double, {{{}}, {{}}, {{}}, {{}}, {{}}, {{}}}}, {{}, {{{double, {}, double, {}}, {}, {}}}, double, {}, double, double, {{{}}}}, {{}, {{{double, {}, double, {}}, {}, {}}}, double, {}, double, double, {{{double, double}}}}}, {{{[800 x double]}, {}, {}}, {{[256 x double]}, {}, {}}, {{[64 x double]}, {}, {}}, {{[256 x double]}, {}, {}}, {{[800 x double]}, {}, {}}, {{[64 x double]}, {}, {}}, {{[625 x double]}, {}, {}}, {{[64 x double]}, {}, {}}, {{[4 x double]}, {}, {}}, {{[64 x double]}, {}, {}}, {{[625 x double]}, {}, {}}, {{[4 x double]}, {}, {}}, {{[4 x double]}, {}, {}}, {{[4 x double]}, {}, {}}, {{[4 x double]}, {}, {}}, {{[4 x double]}, {}, {}}, {{[1024 x double]}, {}, {}}, {{double, [2 x [1 x double]], double, {}}, [32 x [2 x double]], {[1 x double], [1 x double]}, {}, {}, {}}, {{[625 x double]}, {}, {}}, {{[1024 x double]}, {}, {}}, {{[4 x double]}, {}, {}}, {{double, [2 x [1 x double]], double, {}}, [25 x [32 x double]], {[1 x double], [1 x double]}, {}, {}, {}}, {{[4 x double]}, {}, {}}, {{[64 x double]}, {}, {}}, {{[1024 x double]}, {}, {}}, {{[4 x double]}, {}, {}}, {{double, [2 x [1 x double]], double, {}}, [8 x [32 x double]], {[1 x double], [1 x double]}, {}, {}, {}}, {{[4 x double]}, {}, {}}, {{[1024 x double]}, {}, {}}, {{[4 x double]}, {}, {}}, {{double, [2 x [1 x double]], double, {}}, [2 x [32 x double]], {[1 x double], [1 x double]}, {}, {}, {}}, {{[64 x double]}, {}, {}}, {{[1024 x double]}, {}, {}}, {{[4 x double]}, {}, {}}, {{double, [2 x [1 x double]], double, {}}, [8 x [32 x double]], {[1 x double], [1 x double]}, {}, {}, {}}, {{[625 x double]}, {}, {}}, {{[1024 x double]}, {}, {}}, {{[4 x double]}, {}, {}}, {{double, [2 x [1 x double]], double, {}}, [25 x [32 x double]], {[1 x double], [1 x double]}, {}, {}, {}}}, {}, {}, double, double, {}, double}* %".2", i32 0, i32 1, i32 3 , !dbg !7
  %"ptr_param_function_MappingProjection from CURRENT STIMULUS[RESULT] to HIDDEN LAYER[InputPort-0]" = getelementptr {{[256 x double]}, {}, {}}, {{[256 x double]}, {}, {}}* %".39", i32 0, i32 0 , !dbg !7
  %"ptr_param_matrix_LinearMatrix Function-3" = getelementptr {[256 x double]}, {[256 x double]}* %"ptr_param_function_MappingProjection from CURRENT STIMULUS[RESULT] to HIDDEN LAYER[InputPort-0]", i32 0, i32 0 , !dbg !7
  %".40" = bitcast [256 x double]* %"ptr_param_matrix_LinearMatrix Function-3" to [8 x [32 x double]]* , !dbg !7
  %".41" = alloca [8 x [32 x double]], !dbg !7
  %".42" = getelementptr [8 x [32 x double]], [8 x [32 x double]]* %".38", i32 0, i32 0, i32 0 , !dbg !7
  %".43" = getelementptr [8 x [32 x double]], [8 x [32 x double]]* %".41", i32 0, i32 0, i32 0 , !dbg !7
  call void @"__pnl_builtin_mat_scalar_mult"(double* %".42", double 0x3f847ae147ae147b, i32 8, i32 32, double* %".43"), !dbg !7
  %".45" = getelementptr [8 x [32 x double]], [8 x [32 x double]]* %".40", i32 0, i32 0, i32 0 , !dbg !7
  %".46" = getelementptr [8 x [32 x double]], [8 x [32 x double]]* %".41", i32 0, i32 0, i32 0 , !dbg !7
  %".47" = getelementptr [8 x [32 x double]], [8 x [32 x double]]* %".40", i32 0, i32 0, i32 0 , !dbg !7
  call void @"__pnl_builtin_mat_sub"(double* %".45", double* %".46", i32 8, i32 32, double* %".47"), !dbg !7
  %".49" = getelementptr {[25 x [32 x double]], [8 x [32 x double]], [2 x [32 x double]], [8 x [32 x double]], [25 x [32 x double]], [32 x [2 x double]]}, {[25 x [32 x double]], [8 x [32 x double]], [2 x [32 x double]], [8 x [32 x double]], [25 x [32 x double]], [32 x [2 x double]]}* %".4", i32 0, i32 4 , !dbg !7
  %".50" = getelementptr {{{{{{double, double}}, {{double, double}}, {{double, double}}, {{double, double}}, {{double, double}}, {{double, double}}}, {[1 x double], [1 x double], [1 x double], [1 x [25 x double]]}, {}, double, double, double, {{{double, double}}}, {double}, {{{double, {}, double, {}}, {}, {}}}, double, {[1 x double], [1 x double], [1 x double]}, {}}, {{{{double, double}}, {{double, double}}, {{double, double}}, {{double, double}}, {{double, double}}, {{double, double}}}, {[1 x double], [1 x double], [1 x double], [1 x [8 x double]]}, {}, double, double, double, {{{double, double}}}, {double}, {{{double, {}, double, {}}, {}, {}}}, double, {[1 x double], [1 x double], [1 x double]}, {}}, {{{{double, double}}, {{double, double}}, {{double, double}}, {{double, double}}, {{double, double}}, {{double, double}}}, {[1 x double], [1 x double], [1 x double], [1 x [2 x double]]}, {}, double, double, double, {{{double, double}}}, {double}, {{{double, {}, double, {}}, {}, {}}}, double, {[1 x double], [1 x double], [1 x double]}, {}}, {{{{double, double}}, {{double, double}}, {{double, double}}, {{double, double}}, {{double, double}}, {{double, double}}}, {[1 x double], [1 x double], [1 x double], [1 x [8 x double]]}, {}, double, double, double, {{{double, double}}}, {double}, {{{double, {}, double, {}}, {}, {}}}, double, {[1 x double], [1 x double], [1 x double]}, {}}, {{{{double, double}}, {{double, double}}, {{double, double}}, {{double, double}}, {{double, double}}, {{double, double}}}, {[1 x double], [1 x double], [1 x double], [1 x [25 x double]]}, {}, double, double, double, {{{double, double}}}, {double}, {{{double, {}, double, {}}, {}, {}}}, double, {[1 x double], [1 x double], [1 x double]}, {}}, {{{{double, double}}, {{double, double}}, {{double, double}}, {{double, double}}, {{double, double}}, {{double, double}}}, {[1 x double], [1 x double], [1 x double], [1 x [32 x double]]}, {}, double, double, double, {{{double, double}}}, {double}, {{{double, {}, double, {}}, {}, {}}}, double, {[1 x double], [1 x double], [1 x double]}, {}}, {{{{double, double}}, {{double, double}}}, {{{double, {}, double, {}}, {}, {}}}, double, {double, {double}, [1 x double]}, double, double, {{{double, double}}}}, {{{{double, double}}, {{double, double}}}, {{{double, {}, double, {}}, {}, {}}}, double, {[1 x double], [1 x double]}, double, double, {{{double, double}}}}, {{{{double, double}}, {{double, double}}}, {{{double, {}, double, {}}, double, {}}, {{double, {}, double, {}}, {}, {}}}, {}, double, {[1 x double], [2 x [1 x double]], [1 x double], {}}, double, {}, double, {{{double, double}}, {{}}}}, {{{{double, double}}}, {{{double, double}, {}}}, [32 x [2 x double]], {}, double, [2 x double], double, {{{double, double}}, {{double, double}, {}}}, {{{double, {}, double, {}}, {}, {}}, {{double, {}, double, {}}, {}, {}}, {{double, {}, double, {}}, {}, {}}}, {[2 x double], [2 x [2 x double]], [2 x double], [1 x double], [32 x double]}, double}, {{{{double, double}}}, {{{double, double}, {}}}, [25 x [32 x double]], {}, double, [25 x [32 x double]], double, {{{double, double}}, {{double, double}, {}}}, {{{double, {}, double, {}}, {}, {}}, {{double, {}, double, {}}, {}, {}}, {{double, {}, double, {}}, {}, {}}}, {[32 x double], [32 x [2 x double]], [2 x double], [1 x double], [25 x double], {}}, double}, {{{{double, double}}}, {{{double, double}, {}}}, [8 x [32 x double]], {}, double, [8 x [32 x double]], double, {{{double, double}}, {{double, double}, {}}}, {{{double, {}, double, {}}, {}, {}}, {{double, {}, double, {}}, {}, {}}, {{double, {}, double, {}}, {}, {}}}, {[32 x double], [32 x [2 x double]], [2 x double], [1 x double], [8 x double], {}}, double}, {{{{double, double}}}, {{{double, double}, {}}}, [2 x [32 x double]], {}, double, [2 x [32 x double]], double, {{{double, double}}, {{double, double}, {}}}, {{{double, {}, double, {}}, {}, {}}, {{double, {}, double, {}}, {}, {}}, {{double, {}, double, {}}, {}, {}}}, {[32 x double], [32 x [2 x double]], [2 x double], [1 x double], [2 x double], {}}, double}, {{{{double, double}}}, {{{double, double}, {}}}, [8 x [32 x double]], {}, double, [8 x [32 x double]], double, {{{double, double}}, {{double, double}, {}}}, {{{double, {}, double, {}}, {}, {}}, {{double, {}, double, {}}, {}, {}}, {{double, {}, double, {}}, {}, {}}}, {[32 x double], [32 x [2 x double]], [2 x double], [1 x double], [8 x double], {}}, double}, {{{{double, double}}}, {{{double, double}, {}}}, [25 x [32 x double]], {}, double, [25 x [32 x double]], double, {{{double, double}}, {{double, double}, {}}}, {{{double, {}, double, {}}, {}, {}}, {{double, {}, double, {}}, {}, {}}, {{double, {}, double, {}}, {}, {}}}, {[32 x double], [32 x [2 x double]], [2 x double], [1 x double], [25 x double], {}}, double}, {{}, {{{double, {}, double, {}}, {}, {}}, {{double, {}, double, {}}, {}, {}}, {{double, {}, double, {}}, {}, {}}, {{double, {}, double, {}}, {}, {}}, {{double, {}, double, {}}, {}, {}}, {{double, {}, double, {}}, {}, {}}}, double, {}, double, double, {{{}}, {{}}, {{}}, {{}}, {{}}, {{}}}}, {{}, {{{double, {}, double, {}}, {}, {}}}, double, {}, double, double, {{{}}}}, {{}, {{{double, {}, double, {}}, {}, {}}}, double, {}, double, double, {{{double, double}}}}}, {{{[800 x double]}, {}, {}}, {{[256 x double]}, {}, {}}, {{[64 x double]}, {}, {}}, {{[256 x double]}, {}, {}}, {{[800 x double]}, {}, {}}, {{[64 x double]}, {}, {}}, {{[625 x double]}, {}, {}}, {{[64 x double]}, {}, {}}, {{[4 x double]}, {}, {}}, {{[64 x double]}, {}, {}}, {{[625 x double]}, {}, {}}, {{[4 x double]}, {}, {}}, {{[4 x double]}, {}, {}}, {{[4 x double]}, {}, {}}, {{[4 x double]}, {}, {}}, {{[4 x double]}, {}, {}}, {{[1024 x double]}, {}, {}}, {{double, [2 x [1 x double]], double, {}}, [32 x [2 x double]], {[1 x double], [1 x double]}, {}, {}, {}}, {{[625 x double]}, {}, {}}, {{[1024 x double]}, {}, {}}, {{[4 x double]}, {}, {}}, {{double, [2 x [1 x double]], double, {}}, [25 x [32 x double]], {[1 x double], [1 x double]}, {}, {}, {}}, {{[4 x double]}, {}, {}}, {{[64 x double]}, {}, {}}, {{[1024 x double]}, {}, {}}, {{[4 x double]}, {}, {}}, {{double, [2 x [1 x double]], double, {}}, [8 x [32 x double]], {[1 x double], [1 x double]}, {}, {}, {}}, {{[4 x double]}, {}, {}}, {{[1024 x double]}, {}, {}}, {{[4 x double]}, {}, {}}, {{double, [2 x [1 x double]], double, {}}, [2 x [32 x double]], {[1 x double], [1 x double]}, {}, {}, {}}, {{[64 x double]}, {}, {}}, {{[1024 x double]}, {}, {}}, {{[4 x double]}, {}, {}}, {{double, [2 x [1 x double]], double, {}}, [8 x [32 x double]], {[1 x double], [1 x double]}, {}, {}, {}}, {{[625 x double]}, {}, {}}, {{[1024 x double]}, {}, {}}, {{[4 x double]}, {}, {}}, {{double, [2 x [1 x double]], double, {}}, [25 x [32 x double]], {[1 x double], [1 x double]}, {}, {}, {}}}, {}, {}, double, double, {}, double}, {{{{{{double, double}}, {{double, double}}, {{double, double}}, {{double, double}}, {{double, double}}, {{double, double}}}, {[1 x double], [1 x double], [1 x double], [1 x [25 x double]]}, {}, double, double, double, {{{double, double}}}, {double}, {{{double, {}, double, {}}, {}, {}}}, double, {[1 x double], [1 x double], [1 x double]}, {}}, {{{{double, double}}, {{double, double}}, {{double, double}}, {{double, double}}, {{double, double}}, {{double, double}}}, {[1 x double], [1 x double], [1 x double], [1 x [8 x double]]}, {}, double, double, double, {{{double, double}}}, {double}, {{{double, {}, double, {}}, {}, {}}}, double, {[1 x double], [1 x double], [1 x double]}, {}}, {{{{double, double}}, {{double, double}}, {{double, double}}, {{double, double}}, {{double, double}}, {{double, double}}}, {[1 x double], [1 x double], [1 x double], [1 x [2 x double]]}, {}, double, double, double, {{{double, double}}}, {double}, {{{double, {}, double, {}}, {}, {}}}, double, {[1 x double], [1 x double], [1 x double]}, {}}, {{{{double, double}}, {{double, double}}, {{double, double}}, {{double, double}}, {{double, double}}, {{double, double}}}, {[1 x double], [1 x double], [1 x double], [1 x [8 x double]]}, {}, double, double, double, {{{double, double}}}, {double}, {{{double, {}, double, {}}, {}, {}}}, double, {[1 x double], [1 x double], [1 x double]}, {}}, {{{{double, double}}, {{double, double}}, {{double, double}}, {{double, double}}, {{double, double}}, {{double, double}}}, {[1 x double], [1 x double], [1 x double], [1 x [25 x double]]}, {}, double, double, double, {{{double, double}}}, {double}, {{{double, {}, double, {}}, {}, {}}}, double, {[1 x double], [1 x double], [1 x double]}, {}}, {{{{double, double}}, {{double, double}}, {{double, double}}, {{double, double}}, {{double, double}}, {{double, double}}}, {[1 x double], [1 x double], [1 x double], [1 x [32 x double]]}, {}, double, double, double, {{{double, double}}}, {double}, {{{double, {}, double, {}}, {}, {}}}, double, {[1 x double], [1 x double], [1 x double]}, {}}, {{{{double, double}}, {{double, double}}}, {{{double, {}, double, {}}, {}, {}}}, double, {double, {double}, [1 x double]}, double, double, {{{double, double}}}}, {{{{double, double}}, {{double, double}}}, {{{double, {}, double, {}}, {}, {}}}, double, {[1 x double], [1 x double]}, double, double, {{{double, double}}}}, {{{{double, double}}, {{double, double}}}, {{{double, {}, double, {}}, double, {}}, {{double, {}, double, {}}, {}, {}}}, {}, double, {[1 x double], [2 x [1 x double]], [1 x double], {}}, double, {}, double, {{{double, double}}, {{}}}}, {{{{double, double}}}, {{{double, double}, {}}}, [32 x [2 x double]], {}, double, [2 x double], double, {{{double, double}}, {{double, double}, {}}}, {{{double, {}, double, {}}, {}, {}}, {{double, {}, double, {}}, {}, {}}, {{double, {}, double, {}}, {}, {}}}, {[2 x double], [2 x [2 x double]], [2 x double], [1 x double], [32 x double]}, double}, {{{{double, double}}}, {{{double, double}, {}}}, [25 x [32 x double]], {}, double, [25 x [32 x double]], double, {{{double, double}}, {{double, double}, {}}}, {{{double, {}, double, {}}, {}, {}}, {{double, {}, double, {}}, {}, {}}, {{double, {}, double, {}}, {}, {}}}, {[32 x double], [32 x [2 x double]], [2 x double], [1 x double], [25 x double], {}}, double}, {{{{double, double}}}, {{{double, double}, {}}}, [8 x [32 x double]], {}, double, [8 x [32 x double]], double, {{{double, double}}, {{double, double}, {}}}, {{{double, {}, double, {}}, {}, {}}, {{double, {}, double, {}}, {}, {}}, {{double, {}, double, {}}, {}, {}}}, {[32 x double], [32 x [2 x double]], [2 x double], [1 x double], [8 x double], {}}, double}, {{{{double, double}}}, {{{double, double}, {}}}, [2 x [32 x double]], {}, double, [2 x [32 x double]], double, {{{double, double}}, {{double, double}, {}}}, {{{double, {}, double, {}}, {}, {}}, {{double, {}, double, {}}, {}, {}}, {{double, {}, double, {}}, {}, {}}}, {[32 x double], [32 x [2 x double]], [2 x double], [1 x double], [2 x double], {}}, double}, {{{{double, double}}}, {{{double, double}, {}}}, [8 x [32 x double]], {}, double, [8 x [32 x double]], double, {{{double, double}}, {{double, double}, {}}}, {{{double, {}, double, {}}, {}, {}}, {{double, {}, double, {}}, {}, {}}, {{double, {}, double, {}}, {}, {}}}, {[32 x double], [32 x [2 x double]], [2 x double], [1 x double], [8 x double], {}}, double}, {{{{double, double}}}, {{{double, double}, {}}}, [25 x [32 x double]], {}, double, [25 x [32 x double]], double, {{{double, double}}, {{double, double}, {}}}, {{{double, {}, double, {}}, {}, {}}, {{double, {}, double, {}}, {}, {}}, {{double, {}, double, {}}, {}, {}}}, {[32 x double], [32 x [2 x double]], [2 x double], [1 x double], [25 x double], {}}, double}, {{}, {{{double, {}, double, {}}, {}, {}}, {{double, {}, double, {}}, {}, {}}, {{double, {}, double, {}}, {}, {}}, {{double, {}, double, {}}, {}, {}}, {{double, {}, double, {}}, {}, {}}, {{double, {}, double, {}}, {}, {}}}, double, {}, double, double, {{{}}, {{}}, {{}}, {{}}, {{}}, {{}}}}, {{}, {{{double, {}, double, {}}, {}, {}}}, double, {}, double, double, {{{}}}}, {{}, {{{double, {}, double, {}}, {}, {}}}, double, {}, double, double, {{{double, double}}}}}, {{{[800 x double]}, {}, {}}, {{[256 x double]}, {}, {}}, {{[64 x double]}, {}, {}}, {{[256 x double]}, {}, {}}, {{[800 x double]}, {}, {}}, {{[64 x double]}, {}, {}}, {{[625 x double]}, {}, {}}, {{[64 x double]}, {}, {}}, {{[4 x double]}, {}, {}}, {{[64 x double]}, {}, {}}, {{[625 x double]}, {}, {}}, {{[4 x double]}, {}, {}}, {{[4 x double]}, {}, {}}, {{[4 x double]}, {}, {}}, {{[4 x double]}, {}, {}}, {{[4 x double]}, {}, {}}, {{[1024 x double]}, {}, {}}, {{double, [2 x [1 x double]], double, {}}, [32 x [2 x double]], {[1 x double], [1 x double]}, {}, {}, {}}, {{[625 x double]}, {}, {}}, {{[1024 x double]}, {}, {}}, {{[4 x double]}, {}, {}}, {{double, [2 x [1 x double]], double, {}}, [25 x [32 x double]], {[1 x double], [1 x double]}, {}, {}, {}}, {{[4 x double]}, {}, {}}, {{[64 x double]}, {}, {}}, {{[1024 x double]}, {}, {}}, {{[4 x double]}, {}, {}}, {{double, [2 x [1 x double]], double, {}}, [8 x [32 x double]], {[1 x double], [1 x double]}, {}, {}, {}}, {{[4 x double]}, {}, {}}, {{[1024 x double]}, {}, {}}, {{[4 x double]}, {}, {}}, {{double, [2 x [1 x double]], double, {}}, [2 x [32 x double]], {[1 x double], [1 x double]}, {}, {}, {}}, {{[64 x double]}, {}, {}}, {{[1024 x double]}, {}, {}}, {{[4 x double]}, {}, {}}, {{double, [2 x [1 x double]], double, {}}, [8 x [32 x double]], {[1 x double], [1 x double]}, {}, {}, {}}, {{[625 x double]}, {}, {}}, {{[1024 x double]}, {}, {}}, {{[4 x double]}, {}, {}}, {{double, [2 x [1 x double]], double, {}}, [25 x [32 x double]], {[1 x double], [1 x double]}, {}, {}, {}}}, {}, {}, double, double, {}, double}* %".2", i32 0, i32 1, i32 4 , !dbg !7
  %"ptr_param_function_MappingProjection from RETRIEVED CONTEXT[RESULT] to HIDDEN LAYER[InputPort-0]" = getelementptr {{[800 x double]}, {}, {}}, {{[800 x double]}, {}, {}}* %".50", i32 0, i32 0 , !dbg !7
  %"ptr_param_matrix_LinearMatrix Function-4" = getelementptr {[800 x double]}, {[800 x double]}* %"ptr_param_function_MappingProjection from RETRIEVED CONTEXT[RESULT] to HIDDEN LAYER[InputPort-0]", i32 0, i32 0 , !dbg !7
  %".51" = bitcast [800 x double]* %"ptr_param_matrix_LinearMatrix Function-4" to [25 x [32 x double]]* , !dbg !7
  %".52" = alloca [25 x [32 x double]], !dbg !7
  %".53" = getelementptr [25 x [32 x double]], [25 x [32 x double]]* %".49", i32 0, i32 0, i32 0 , !dbg !7
  %".54" = getelementptr [25 x [32 x double]], [25 x [32 x double]]* %".52", i32 0, i32 0, i32 0 , !dbg !7
  call void @"__pnl_builtin_mat_scalar_mult"(double* %".53", double 0x3f847ae147ae147b, i32 25, i32 32, double* %".54"), !dbg !7
  %".56" = getelementptr [25 x [32 x double]], [25 x [32 x double]]* %".51", i32 0, i32 0, i32 0 , !dbg !7
  %".57" = getelementptr [25 x [32 x double]], [25 x [32 x double]]* %".52", i32 0, i32 0, i32 0 , !dbg !7
  %".58" = getelementptr [25 x [32 x double]], [25 x [32 x double]]* %".51", i32 0, i32 0, i32 0 , !dbg !7
  call void @"__pnl_builtin_mat_sub"(double* %".56", double* %".57", i32 25, i32 32, double* %".58"), !dbg !7
  %".60" = getelementptr {[25 x [32 x double]], [8 x [32 x double]], [2 x [32 x double]], [8 x [32 x double]], [25 x [32 x double]], [32 x [2 x double]]}, {[25 x [32 x double]], [8 x [32 x double]], [2 x [32 x double]], [8 x [32 x double]], [25 x [32 x double]], [32 x [2 x double]]}* %".4", i32 0, i32 5 , !dbg !7
  %".61" = getelementptr {{{{{{double, double}}, {{double, double}}, {{double, double}}, {{double, double}}, {{double, double}}, {{double, double}}}, {[1 x double], [1 x double], [1 x double], [1 x [25 x double]]}, {}, double, double, double, {{{double, double}}}, {double}, {{{double, {}, double, {}}, {}, {}}}, double, {[1 x double], [1 x double], [1 x double]}, {}}, {{{{double, double}}, {{double, double}}, {{double, double}}, {{double, double}}, {{double, double}}, {{double, double}}}, {[1 x double], [1 x double], [1 x double], [1 x [8 x double]]}, {}, double, double, double, {{{double, double}}}, {double}, {{{double, {}, double, {}}, {}, {}}}, double, {[1 x double], [1 x double], [1 x double]}, {}}, {{{{double, double}}, {{double, double}}, {{double, double}}, {{double, double}}, {{double, double}}, {{double, double}}}, {[1 x double], [1 x double], [1 x double], [1 x [2 x double]]}, {}, double, double, double, {{{double, double}}}, {double}, {{{double, {}, double, {}}, {}, {}}}, double, {[1 x double], [1 x double], [1 x double]}, {}}, {{{{double, double}}, {{double, double}}, {{double, double}}, {{double, double}}, {{double, double}}, {{double, double}}}, {[1 x double], [1 x double], [1 x double], [1 x [8 x double]]}, {}, double, double, double, {{{double, double}}}, {double}, {{{double, {}, double, {}}, {}, {}}}, double, {[1 x double], [1 x double], [1 x double]}, {}}, {{{{double, double}}, {{double, double}}, {{double, double}}, {{double, double}}, {{double, double}}, {{double, double}}}, {[1 x double], [1 x double], [1 x double], [1 x [25 x double]]}, {}, double, double, double, {{{double, double}}}, {double}, {{{double, {}, double, {}}, {}, {}}}, double, {[1 x double], [1 x double], [1 x double]}, {}}, {{{{double, double}}, {{double, double}}, {{double, double}}, {{double, double}}, {{double, double}}, {{double, double}}}, {[1 x double], [1 x double], [1 x double], [1 x [32 x double]]}, {}, double, double, double, {{{double, double}}}, {double}, {{{double, {}, double, {}}, {}, {}}}, double, {[1 x double], [1 x double], [1 x double]}, {}}, {{{{double, double}}, {{double, double}}}, {{{double, {}, double, {}}, {}, {}}}, double, {double, {double}, [1 x double]}, double, double, {{{double, double}}}}, {{{{double, double}}, {{double, double}}}, {{{double, {}, double, {}}, {}, {}}}, double, {[1 x double], [1 x double]}, double, double, {{{double, double}}}}, {{{{double, double}}, {{double, double}}}, {{{double, {}, double, {}}, double, {}}, {{double, {}, double, {}}, {}, {}}}, {}, double, {[1 x double], [2 x [1 x double]], [1 x double], {}}, double, {}, double, {{{double, double}}, {{}}}}, {{{{double, double}}}, {{{double, double}, {}}}, [32 x [2 x double]], {}, double, [2 x double], double, {{{double, double}}, {{double, double}, {}}}, {{{double, {}, double, {}}, {}, {}}, {{double, {}, double, {}}, {}, {}}, {{double, {}, double, {}}, {}, {}}}, {[2 x double], [2 x [2 x double]], [2 x double], [1 x double], [32 x double]}, double}, {{{{double, double}}}, {{{double, double}, {}}}, [25 x [32 x double]], {}, double, [25 x [32 x double]], double, {{{double, double}}, {{double, double}, {}}}, {{{double, {}, double, {}}, {}, {}}, {{double, {}, double, {}}, {}, {}}, {{double, {}, double, {}}, {}, {}}}, {[32 x double], [32 x [2 x double]], [2 x double], [1 x double], [25 x double], {}}, double}, {{{{double, double}}}, {{{double, double}, {}}}, [8 x [32 x double]], {}, double, [8 x [32 x double]], double, {{{double, double}}, {{double, double}, {}}}, {{{double, {}, double, {}}, {}, {}}, {{double, {}, double, {}}, {}, {}}, {{double, {}, double, {}}, {}, {}}}, {[32 x double], [32 x [2 x double]], [2 x double], [1 x double], [8 x double], {}}, double}, {{{{double, double}}}, {{{double, double}, {}}}, [2 x [32 x double]], {}, double, [2 x [32 x double]], double, {{{double, double}}, {{double, double}, {}}}, {{{double, {}, double, {}}, {}, {}}, {{double, {}, double, {}}, {}, {}}, {{double, {}, double, {}}, {}, {}}}, {[32 x double], [32 x [2 x double]], [2 x double], [1 x double], [2 x double], {}}, double}, {{{{double, double}}}, {{{double, double}, {}}}, [8 x [32 x double]], {}, double, [8 x [32 x double]], double, {{{double, double}}, {{double, double}, {}}}, {{{double, {}, double, {}}, {}, {}}, {{double, {}, double, {}}, {}, {}}, {{double, {}, double, {}}, {}, {}}}, {[32 x double], [32 x [2 x double]], [2 x double], [1 x double], [8 x double], {}}, double}, {{{{double, double}}}, {{{double, double}, {}}}, [25 x [32 x double]], {}, double, [25 x [32 x double]], double, {{{double, double}}, {{double, double}, {}}}, {{{double, {}, double, {}}, {}, {}}, {{double, {}, double, {}}, {}, {}}, {{double, {}, double, {}}, {}, {}}}, {[32 x double], [32 x [2 x double]], [2 x double], [1 x double], [25 x double], {}}, double}, {{}, {{{double, {}, double, {}}, {}, {}}, {{double, {}, double, {}}, {}, {}}, {{double, {}, double, {}}, {}, {}}, {{double, {}, double, {}}, {}, {}}, {{double, {}, double, {}}, {}, {}}, {{double, {}, double, {}}, {}, {}}}, double, {}, double, double, {{{}}, {{}}, {{}}, {{}}, {{}}, {{}}}}, {{}, {{{double, {}, double, {}}, {}, {}}}, double, {}, double, double, {{{}}}}, {{}, {{{double, {}, double, {}}, {}, {}}}, double, {}, double, double, {{{double, double}}}}}, {{{[800 x double]}, {}, {}}, {{[256 x double]}, {}, {}}, {{[64 x double]}, {}, {}}, {{[256 x double]}, {}, {}}, {{[800 x double]}, {}, {}}, {{[64 x double]}, {}, {}}, {{[625 x double]}, {}, {}}, {{[64 x double]}, {}, {}}, {{[4 x double]}, {}, {}}, {{[64 x double]}, {}, {}}, {{[625 x double]}, {}, {}}, {{[4 x double]}, {}, {}}, {{[4 x double]}, {}, {}}, {{[4 x double]}, {}, {}}, {{[4 x double]}, {}, {}}, {{[4 x double]}, {}, {}}, {{[1024 x double]}, {}, {}}, {{double, [2 x [1 x double]], double, {}}, [32 x [2 x double]], {[1 x double], [1 x double]}, {}, {}, {}}, {{[625 x double]}, {}, {}}, {{[1024 x double]}, {}, {}}, {{[4 x double]}, {}, {}}, {{double, [2 x [1 x double]], double, {}}, [25 x [32 x double]], {[1 x double], [1 x double]}, {}, {}, {}}, {{[4 x double]}, {}, {}}, {{[64 x double]}, {}, {}}, {{[1024 x double]}, {}, {}}, {{[4 x double]}, {}, {}}, {{double, [2 x [1 x double]], double, {}}, [8 x [32 x double]], {[1 x double], [1 x double]}, {}, {}, {}}, {{[4 x double]}, {}, {}}, {{[1024 x double]}, {}, {}}, {{[4 x double]}, {}, {}}, {{double, [2 x [1 x double]], double, {}}, [2 x [32 x double]], {[1 x double], [1 x double]}, {}, {}, {}}, {{[64 x double]}, {}, {}}, {{[1024 x double]}, {}, {}}, {{[4 x double]}, {}, {}}, {{double, [2 x [1 x double]], double, {}}, [8 x [32 x double]], {[1 x double], [1 x double]}, {}, {}, {}}, {{[625 x double]}, {}, {}}, {{[1024 x double]}, {}, {}}, {{[4 x double]}, {}, {}}, {{double, [2 x [1 x double]], double, {}}, [25 x [32 x double]], {[1 x double], [1 x double]}, {}, {}, {}}}, {}, {}, double, double, {}, double}, {{{{{{double, double}}, {{double, double}}, {{double, double}}, {{double, double}}, {{double, double}}, {{double, double}}}, {[1 x double], [1 x double], [1 x double], [1 x [25 x double]]}, {}, double, double, double, {{{double, double}}}, {double}, {{{double, {}, double, {}}, {}, {}}}, double, {[1 x double], [1 x double], [1 x double]}, {}}, {{{{double, double}}, {{double, double}}, {{double, double}}, {{double, double}}, {{double, double}}, {{double, double}}}, {[1 x double], [1 x double], [1 x double], [1 x [8 x double]]}, {}, double, double, double, {{{double, double}}}, {double}, {{{double, {}, double, {}}, {}, {}}}, double, {[1 x double], [1 x double], [1 x double]}, {}}, {{{{double, double}}, {{double, double}}, {{double, double}}, {{double, double}}, {{double, double}}, {{double, double}}}, {[1 x double], [1 x double], [1 x double], [1 x [2 x double]]}, {}, double, double, double, {{{double, double}}}, {double}, {{{double, {}, double, {}}, {}, {}}}, double, {[1 x double], [1 x double], [1 x double]}, {}}, {{{{double, double}}, {{double, double}}, {{double, double}}, {{double, double}}, {{double, double}}, {{double, double}}}, {[1 x double], [1 x double], [1 x double], [1 x [8 x double]]}, {}, double, double, double, {{{double, double}}}, {double}, {{{double, {}, double, {}}, {}, {}}}, double, {[1 x double], [1 x double], [1 x double]}, {}}, {{{{double, double}}, {{double, double}}, {{double, double}}, {{double, double}}, {{double, double}}, {{double, double}}}, {[1 x double], [1 x double], [1 x double], [1 x [25 x double]]}, {}, double, double, double, {{{double, double}}}, {double}, {{{double, {}, double, {}}, {}, {}}}, double, {[1 x double], [1 x double], [1 x double]}, {}}, {{{{double, double}}, {{double, double}}, {{double, double}}, {{double, double}}, {{double, double}}, {{double, double}}}, {[1 x double], [1 x double], [1 x double], [1 x [32 x double]]}, {}, double, double, double, {{{double, double}}}, {double}, {{{double, {}, double, {}}, {}, {}}}, double, {[1 x double], [1 x double], [1 x double]}, {}}, {{{{double, double}}, {{double, double}}}, {{{double, {}, double, {}}, {}, {}}}, double, {double, {double}, [1 x double]}, double, double, {{{double, double}}}}, {{{{double, double}}, {{double, double}}}, {{{double, {}, double, {}}, {}, {}}}, double, {[1 x double], [1 x double]}, double, double, {{{double, double}}}}, {{{{double, double}}, {{double, double}}}, {{{double, {}, double, {}}, double, {}}, {{double, {}, double, {}}, {}, {}}}, {}, double, {[1 x double], [2 x [1 x double]], [1 x double], {}}, double, {}, double, {{{double, double}}, {{}}}}, {{{{double, double}}}, {{{double, double}, {}}}, [32 x [2 x double]], {}, double, [2 x double], double, {{{double, double}}, {{double, double}, {}}}, {{{double, {}, double, {}}, {}, {}}, {{double, {}, double, {}}, {}, {}}, {{double, {}, double, {}}, {}, {}}}, {[2 x double], [2 x [2 x double]], [2 x double], [1 x double], [32 x double]}, double}, {{{{double, double}}}, {{{double, double}, {}}}, [25 x [32 x double]], {}, double, [25 x [32 x double]], double, {{{double, double}}, {{double, double}, {}}}, {{{double, {}, double, {}}, {}, {}}, {{double, {}, double, {}}, {}, {}}, {{double, {}, double, {}}, {}, {}}}, {[32 x double], [32 x [2 x double]], [2 x double], [1 x double], [25 x double], {}}, double}, {{{{double, double}}}, {{{double, double}, {}}}, [8 x [32 x double]], {}, double, [8 x [32 x double]], double, {{{double, double}}, {{double, double}, {}}}, {{{double, {}, double, {}}, {}, {}}, {{double, {}, double, {}}, {}, {}}, {{double, {}, double, {}}, {}, {}}}, {[32 x double], [32 x [2 x double]], [2 x double], [1 x double], [8 x double], {}}, double}, {{{{double, double}}}, {{{double, double}, {}}}, [2 x [32 x double]], {}, double, [2 x [32 x double]], double, {{{double, double}}, {{double, double}, {}}}, {{{double, {}, double, {}}, {}, {}}, {{double, {}, double, {}}, {}, {}}, {{double, {}, double, {}}, {}, {}}}, {[32 x double], [32 x [2 x double]], [2 x double], [1 x double], [2 x double], {}}, double}, {{{{double, double}}}, {{{double, double}, {}}}, [8 x [32 x double]], {}, double, [8 x [32 x double]], double, {{{double, double}}, {{double, double}, {}}}, {{{double, {}, double, {}}, {}, {}}, {{double, {}, double, {}}, {}, {}}, {{double, {}, double, {}}, {}, {}}}, {[32 x double], [32 x [2 x double]], [2 x double], [1 x double], [8 x double], {}}, double}, {{{{double, double}}}, {{{double, double}, {}}}, [25 x [32 x double]], {}, double, [25 x [32 x double]], double, {{{double, double}}, {{double, double}, {}}}, {{{double, {}, double, {}}, {}, {}}, {{double, {}, double, {}}, {}, {}}, {{double, {}, double, {}}, {}, {}}}, {[32 x double], [32 x [2 x double]], [2 x double], [1 x double], [25 x double], {}}, double}, {{}, {{{double, {}, double, {}}, {}, {}}, {{double, {}, double, {}}, {}, {}}, {{double, {}, double, {}}, {}, {}}, {{double, {}, double, {}}, {}, {}}, {{double, {}, double, {}}, {}, {}}, {{double, {}, double, {}}, {}, {}}}, double, {}, double, double, {{{}}, {{}}, {{}}, {{}}, {{}}, {{}}}}, {{}, {{{double, {}, double, {}}, {}, {}}}, double, {}, double, double, {{{}}}}, {{}, {{{double, {}, double, {}}, {}, {}}}, double, {}, double, double, {{{double, double}}}}}, {{{[800 x double]}, {}, {}}, {{[256 x double]}, {}, {}}, {{[64 x double]}, {}, {}}, {{[256 x double]}, {}, {}}, {{[800 x double]}, {}, {}}, {{[64 x double]}, {}, {}}, {{[625 x double]}, {}, {}}, {{[64 x double]}, {}, {}}, {{[4 x double]}, {}, {}}, {{[64 x double]}, {}, {}}, {{[625 x double]}, {}, {}}, {{[4 x double]}, {}, {}}, {{[4 x double]}, {}, {}}, {{[4 x double]}, {}, {}}, {{[4 x double]}, {}, {}}, {{[4 x double]}, {}, {}}, {{[1024 x double]}, {}, {}}, {{double, [2 x [1 x double]], double, {}}, [32 x [2 x double]], {[1 x double], [1 x double]}, {}, {}, {}}, {{[625 x double]}, {}, {}}, {{[1024 x double]}, {}, {}}, {{[4 x double]}, {}, {}}, {{double, [2 x [1 x double]], double, {}}, [25 x [32 x double]], {[1 x double], [1 x double]}, {}, {}, {}}, {{[4 x double]}, {}, {}}, {{[64 x double]}, {}, {}}, {{[1024 x double]}, {}, {}}, {{[4 x double]}, {}, {}}, {{double, [2 x [1 x double]], double, {}}, [8 x [32 x double]], {[1 x double], [1 x double]}, {}, {}, {}}, {{[4 x double]}, {}, {}}, {{[1024 x double]}, {}, {}}, {{[4 x double]}, {}, {}}, {{double, [2 x [1 x double]], double, {}}, [2 x [32 x double]], {[1 x double], [1 x double]}, {}, {}, {}}, {{[64 x double]}, {}, {}}, {{[1024 x double]}, {}, {}}, {{[4 x double]}, {}, {}}, {{double, [2 x [1 x double]], double, {}}, [8 x [32 x double]], {[1 x double], [1 x double]}, {}, {}, {}}, {{[625 x double]}, {}, {}}, {{[1024 x double]}, {}, {}}, {{[4 x double]}, {}, {}}, {{double, [2 x [1 x double]], double, {}}, [25 x [32 x double]], {[1 x double], [1 x double]}, {}, {}, {}}}, {}, {}, double, double, {}, double}* %".2", i32 0, i32 1, i32 5 , !dbg !7
  %"ptr_param_function_MappingProjection from HIDDEN LAYER[RESULT] to DECISION LAYER[InputPort-0]" = getelementptr {{[64 x double]}, {}, {}}, {{[64 x double]}, {}, {}}* %".61", i32 0, i32 0 , !dbg !7
  %"ptr_param_matrix_LinearMatrix Function-5" = getelementptr {[64 x double]}, {[64 x double]}* %"ptr_param_function_MappingProjection from HIDDEN LAYER[RESULT] to DECISION LAYER[InputPort-0]", i32 0, i32 0 , !dbg !7
  %".62" = bitcast [64 x double]* %"ptr_param_matrix_LinearMatrix Function-5" to [32 x [2 x double]]* , !dbg !7
  %".63" = alloca [32 x [2 x double]], !dbg !7
  %".64" = getelementptr [32 x [2 x double]], [32 x [2 x double]]* %".60", i32 0, i32 0, i32 0 , !dbg !7
  %".65" = getelementptr [32 x [2 x double]], [32 x [2 x double]]* %".63", i32 0, i32 0, i32 0 , !dbg !7
  call void @"__pnl_builtin_mat_scalar_mult"(double* %".64", double 0x3f847ae147ae147b, i32 32, i32 2, double* %".65"), !dbg !7
  %".67" = getelementptr [32 x [2 x double]], [32 x [2 x double]]* %".62", i32 0, i32 0, i32 0 , !dbg !7
  %".68" = getelementptr [32 x [2 x double]], [32 x [2 x double]]* %".63", i32 0, i32 0, i32 0 , !dbg !7
  %".69" = getelementptr [32 x [2 x double]], [32 x [2 x double]]* %".62", i32 0, i32 0, i32 0 , !dbg !7
  call void @"__pnl_builtin_mat_sub"(double* %".67", double* %".68", i32 32, i32 2, double* %".69"), !dbg !7
  ret void, !dbg !7
}

declare void @"__pnl_builtin_mat_scalar_mult"(double* %".1", double %".2", i32 %".3", i32 %".4", double* %".5") 

declare void @"__pnl_builtin_mat_sub"(double* %".1", double* %".2", i32 %".3", i32 %".4", double* %".5") 

!llvm.module.flags = !{ !0, !1 }
!llvm.dbg.cu = !{ !5 }
!0 = !{ i32 2, !"Dwarf Version", i32 4 }
!1 = !{ i32 2, !"Debug Info Version", i32 3 }
!2 = !DIFile(directory: "/Users/jdc/PyCharmProjects/PsyNeuLink/psyneulink/library/compositions", filename: "compiledoptimizer.py")
!3 = !{ null }
!4 = !DISubroutineType(types: !3)
!5 = distinct !DICompileUnit(file: !2, isOptimized: false, language: DW_LANG_Python, producer: "PsyNeuLink", runtimeVersion: 0)
!6 = distinct !DISubprogram(file: !2, isLocal: false, line: 0, name: "WORKING_MEMORY__fnn__SGD_STEP_42", type: !4, unit: !5)
!7 = !DILocation(column: 0, line: 0, scope: !6)